C51 COMPILER V9.52.0.0   AT25SF041                                                         05/14/2019 16:10:24 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE AT25SF041
OBJECT MODULE PLACED IN .\Obj\AT25SF041.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Application\Source\AT25SF041.c LARGE BROWSE INCDIR(.\Application\Header)
                    - DEBUG OBJECTEXTEND PRINT(.\Lis\AT25SF041.lst) TABS(2) OBJECT(.\Obj\AT25SF041.obj)

line level    source

   1          #include "AT25SF041.h"
   2          #include "stc15f2k60s2.h"
   3          //unsigned char ucRead_Status_Register_Byte1(void);
   4          
   5          void Wait_ms_SPINOR(int ms)
   6          {
   7   1        unsigned int De_Cnt;
   8   1        while( (ms--) != 0)
   9   1        {
  10   2          for(De_Cnt = 0; De_Cnt < 4; De_Cnt++); 
  11   2        }   
  12   1      }
  13          void AT25SF041_ChipErase(void)
  14          {
  15   1        int i;
  16   1        unsigned char opcode;
  17   1        opcode=Chip_Erase;
  18   1        //P4M1|=0x10;
  19   1        //P4M0&=~(1<<4);
  20   1        P4M1&=~(1<<1 |1<<2|1<<3);
  21   1        P4M0|=0x07;
  22   1        AT25SF041_CS_Clr();
  23   1        Wait_ms_SPINOR(5);
  24   1        
  25   1        for( i=0;i<8;i++)
  26   1        {
  27   2              AT25SF041_SCK_Clr();
  28   2              Wait_ms_SPINOR(5);
  29   2              if( (opcode&0x80)==0x80 )      //
  30   2              {
  31   3                  AT25SF041_SDI_Set();
  32   3              } 
  33   2                else
  34   2              {
  35   3                  AT25SF041_SDI_Clr();
  36   3      
  37   3              }
  38   2              Wait_ms_SPINOR(5);    
  39   2              AT25SF041_SCK_Set();
  40   2              Wait_ms_SPINOR(5);
  41   2              opcode <<= 1;                   //
  42   2      
  43   2      
  44   2        }
  45   1        
  46   1        AT25SF041_CS_Set();
  47   1        Wait_ms_SPINOR(10);
  48   1        while(ucRead_Status_Register_Byte1()&0x01==0x01);
  49   1        
  50   1      }
  51          void AT25SF041_WriteEnable(void)
  52          {
  53   1        int i;
  54   1        unsigned char write_en;
C51 COMPILER V9.52.0.0   AT25SF041                                                         05/14/2019 16:10:24 PAGE 2   

  55   1        write_en=Write_Enable;
  56   1        AT25SF041_CS_Clr();
  57   1      //Wait_ms_SPINOR(5);
  58   1        
  59   1        for( i=0;i<8;i++)
  60   1        {
  61   2              AT25SF041_SCK_Clr();
  62   2              Wait_ms_SPINOR(5);
  63   2              if( (write_en&0x80)==0x80 )      //
  64   2              {
  65   3                  AT25SF041_SDI_Set();
  66   3              } 
  67   2                else
  68   2              {
  69   3                  AT25SF041_SDI_Clr();
  70   3      
  71   3              }
  72   2              Wait_ms_SPINOR(5);    
  73   2              AT25SF041_SCK_Set();
  74   2              Wait_ms_SPINOR(5);
  75   2              write_en <<= 1;                   //
  76   2      
  77   2      
  78   2        }
  79   1        AT25SF041_CS_Set();
  80   1        Wait_ms_SPINOR(5);
  81   1        while(ucRead_Status_Register_Byte1()&0x01==0x01);
  82   1      }
  83          
  84          
  85          void AT25SF041_Write(unsigned char opcode, unsigned long int addr,unsigned char dat)
  86          {
  87   1        int i;
  88   1        AT25SF041_CS_Clr();
  89   1        Wait_ms_SPINOR(5);
  90   1      
  91   1        //////////////////////////////////////////
  92   1        for( i=0;i<8;i++)
  93   1          {
  94   2              AT25SF041_SCK_Clr();
  95   2              Wait_ms_SPINOR(5);
  96   2              if( (opcode&0x80)==0x80 )      //
  97   2              {
  98   3                  AT25SF041_SDI_Set();
  99   3              } 
 100   2                else
 101   2              {
 102   3                  AT25SF041_SDI_Clr();
 103   3      
 104   3              }
 105   2              Wait_ms_SPINOR(5);    
 106   2              AT25SF041_SCK_Set();
 107   2              Wait_ms_SPINOR(5);
 108   2              opcode <<= 1;                   //
 109   2      
 110   2      
 111   2          }
 112   1        // SEND THE ADDR (24-bit)
 113   1        for( i=0;i<24;i++)
 114   1        {
 115   2            AT25SF041_SCK_Clr();
 116   2            Wait_ms_SPINOR(5);
C51 COMPILER V9.52.0.0   AT25SF041                                                         05/14/2019 16:10:24 PAGE 3   

 117   2            if( (addr&0x00800000)==0x00800000 )      //
 118   2            {
 119   3                AT25SF041_SDI_Set();
 120   3            } 
 121   2              else
 122   2            {
 123   3                AT25SF041_SDI_Clr();
 124   3      
 125   3            }
 126   2            Wait_ms_SPINOR(5);    
 127   2            AT25SF041_SCK_Set();
 128   2            Wait_ms_SPINOR(5);
 129   2            addr <<= 1;
 130   2      
 131   2        }
 132   1        
 133   1          for( i=0;i<8;i++)
 134   1        {
 135   2            AT25SF041_SCK_Clr();
 136   2            Wait_ms_SPINOR(5);
 137   2            if( (dat&0x80)==0x80 )       //
 138   2            {
 139   3                AT25SF041_SDI_Set();
 140   3            } 
 141   2              else
 142   2            {
 143   3                AT25SF041_SDI_Clr();
 144   3      
 145   3            }
 146   2            Wait_ms_SPINOR(5);    
 147   2            AT25SF041_SCK_Set();
 148   2            Wait_ms_SPINOR(5);
 149   2            dat <<= 1;
 150   2      
 151   2        }
 152   1        ///////////////////////////////////////
 153   1        AT25SF041_CS_Set();
 154   1        Wait_ms_SPINOR(5);
 155   1        while(ucRead_Status_Register_Byte1()&0x01==0x01);
 156   1      
 157   1      }
 158          
 159          unsigned char  AT25SF041_Read(unsigned char opcode,unsigned long int addr)
 160          {
 161   1        unsigned char dat=0;
 162   1        int i;
 163   1        AT25SF041_CS_Clr();
 164   1        Wait_ms_SPINOR(5);
 165   1      
 166   1        //////////////////////////////////////////
 167   1        // Send the OPCODE
 168   1        for( i=0;i<8;i++)
 169   1        {
 170   2            AT25SF041_SCK_Clr();
 171   2            Wait_ms_SPINOR(5);
 172   2            if( (opcode&0x80)==0x80 )      //
 173   2            {
 174   3                AT25SF041_SDI_Set();
 175   3            } 
 176   2              else
 177   2            {
 178   3                AT25SF041_SDI_Clr();
C51 COMPILER V9.52.0.0   AT25SF041                                                         05/14/2019 16:10:24 PAGE 4   

 179   3      
 180   3            }
 181   2            Wait_ms_SPINOR(5);    
 182   2            AT25SF041_SCK_Set();
 183   2            Wait_ms_SPINOR(5);
 184   2            opcode <<= 1;                   //
 185   2      
 186   2      
 187   2        }
 188   1        // SEND THE ADDR (24-bit)
 189   1        for( i=0;i<24;i++)
 190   1        {
 191   2            AT25SF041_SCK_Clr();
 192   2            Wait_ms_SPINOR(5);
 193   2            if( (addr&0x00800000)==0x00800000 )      //
 194   2            {
 195   3                AT25SF041_SDI_Set();
 196   3            } 
 197   2              else
 198   2            {
 199   3                AT25SF041_SDI_Clr();
 200   3      
 201   3            }
 202   2            Wait_ms_SPINOR(5);    
 203   2            AT25SF041_SCK_Set();
 204   2            Wait_ms_SPINOR(5);
 205   2            addr <<= 1;
 206   2      
 207   2        }
 208   1        /////////////////////////////////////////
 209   1        // Store the output data from NOR FLash
 210   1        Wait_ms_SPINOR(10);
 211   1      
 212   1        AT25SF041_SDO_Set();
 213   1        Wait_ms_SPINOR(2);
 214   1        
 215   1        for( i=0;i<8;i++)
 216   1        {
 217   2            dat <<= 1;                //
 218   2            AT25SF041_SCK_Set();
 219   2            Wait_ms_SPINOR(5);
 220   2            AT25SF041_SCK_Clr();
 221   2            Wait_ms_SPINOR(5);
 222   2      
 223   2            if(AT25SF041_SDO)
 224   2            {
 225   3              // INPUT BIT =1
 226   3              dat |= 0x01;            //
 227   3            }
 228   2      
 229   2            //Wait_ms_SPINOR(5); 
 230   2            //AT25SF041_SCK_Set();
 231   2            //Wait_ms_SPINOR(5);
 232   2      
 233   2        } 
 234   1        
 235   1        ///////////////////////////////////////
 236   1        AT25SF041_CS_Set(); 
 237   1        Wait_ms_SPINOR(5);
 238   1        while(ucRead_Status_Register_Byte1()&0x01==0x01);
 239   1      
 240   1        return dat;
C51 COMPILER V9.52.0.0   AT25SF041                                                         05/14/2019 16:10:24 PAGE 5   

 241   1      
 242   1      }
 243          
 244          
 245          
 246          unsigned char ucRead_Status_Register_Byte1(void)
 247          {
 248   1        unsigned char dat=0,opcode,count=0;
 249   1        int i=0;
 250   1        opcode=Read_Stat_Register_Byte1;
 251   1        AT25SF041_CS_Clr();
 252   1        Wait_ms_SPINOR(5);
 253   1      
 254   1        //////////////////////////////////////////
 255   1        // Send the OPCODE
 256   1        for( i=0;i<8;i++)
 257   1        {
 258   2            AT25SF041_SCK_Clr();
 259   2            Wait_ms_SPINOR(5);
 260   2            if( (opcode&0x80)==0x80 )      //
 261   2            {
 262   3                AT25SF041_SDI_Set();
 263   3            } 
 264   2              else
 265   2            {
 266   3                AT25SF041_SDI_Clr();
 267   3      
 268   3            }
 269   2            Wait_ms_SPINOR(5);    
 270   2            AT25SF041_SCK_Set();
 271   2            Wait_ms_SPINOR(5);
 272   2            opcode <<= 1;                   //
 273   2      
 274   2      
 275   2        }
 276   1      
 277   1        /////////////////////////////////////////
 278   1        // Store the output data from NOR FLash
 279   1        Wait_ms_SPINOR(10);
 280   1      
 281   1        AT25SF041_SDO_Set();
 282   1        Wait_ms_SPINOR(2);
 283   1        for( i=0;i<8;i++)
 284   1        {
 285   2            dat <<= 1;                //
 286   2            AT25SF041_SCK_Set();
 287   2            Wait_ms_SPINOR(5);
 288   2            AT25SF041_SCK_Clr();
 289   2            Wait_ms_SPINOR(5);
 290   2      
 291   2            if(AT25SF041_SDO)
 292   2            {
 293   3              // INPUT BIT =1
 294   3              dat |= 0x01;            //
 295   3            }
 296   2      
 297   2        } 
 298   1        
 299   1        
 300   1        ///////////////////////////////////////
 301   1        AT25SF041_CS_Set(); 
 302   1        Wait_ms_SPINOR(5);
C51 COMPILER V9.52.0.0   AT25SF041                                                         05/14/2019 16:10:24 PAGE 6   

 303   1        return dat;
 304   1      }
 305          
 306          void SPI_NOR_Write_Data(struct data_to_store dat,unsigned long int *addr)
 307          {
 308   1                  
 309   1        AT25SF041_WriteEnable();
 310   1        //Wait_ms_SPINOR(50); 
 311   1        AT25SF041_Write(Byte_Page_Program, *addr,dat.month);
 312   1        ++*addr;
 313   1        
 314   1        Wait_ms_SPINOR(50); 
 315   1        AT25SF041_WriteEnable();
 316   1        //Wait_ms_SPINOR(50); 
 317   1        AT25SF041_Write(Byte_Page_Program, *addr,dat.date); 
 318   1        Wait_ms_SPINOR(50); 
 319   1        ++*addr;
 320   1      
 321   1      
 322   1        AT25SF041_WriteEnable();
 323   1        //Wait_ms_SPINOR(50); 
 324   1        AT25SF041_Write(Byte_Page_Program, *addr,dat.hour); 
 325   1        Wait_ms_SPINOR(50); 
 326   1        ++*addr;
 327   1      
 328   1        AT25SF041_WriteEnable();
 329   1        //Wait_ms_SPINOR(50); 
 330   1        AT25SF041_Write(Byte_Page_Program, *addr,dat.min);
 331   1        Wait_ms_SPINOR(50); 
 332   1        ++*addr;
 333   1      
 334   1        AT25SF041_WriteEnable();
 335   1        //Wait_ms_SPINOR(50); 
 336   1        AT25SF041_Write(Byte_Page_Program, *addr,dat.calib_max_voltage_ADC);    
 337   1        Wait_ms_SPINOR(50); 
 338   1        ++*addr;
 339   1        
 340   1        AT25SF041_WriteEnable();
 341   1        //Wait_ms_SPINOR(50); 
 342   1        AT25SF041_Write(Byte_Page_Program, *addr,dat.calib_max_pos_floor);
 343   1        Wait_ms_SPINOR(50); 
 344   1        ++*addr;
 345   1        
 346   1        AT25SF041_WriteEnable();
 347   1        //Wait_ms_SPINOR(50); 
 348   1        AT25SF041_Write(Byte_Page_Program, *addr,dat.calib_max_pos_float);
 349   1        Wait_ms_SPINOR(50); 
 350   1        ++*addr;
 351   1        
 352   1        AT25SF041_WriteEnable();
 353   1        //Wait_ms_SPINOR(50); 
 354   1        AT25SF041_Write(Byte_Page_Program, *addr,dat.light_ADC);  
 355   1        Wait_ms_SPINOR(50); 
 356   1        ++*addr;
 357   1      
 358   1        AT25SF041_WriteEnable();
 359   1        //Wait_ms_SPINOR(50);
 360   1        AT25SF041_Write(Byte_Page_Program, *addr,dat.Voltage_at_LUT_pos); 
 361   1        Wait_ms_SPINOR(50); 
 362   1        ++*addr;
 363   1        
 364   1        AT25SF041_WriteEnable();
C51 COMPILER V9.52.0.0   AT25SF041                                                         05/14/2019 16:10:24 PAGE 7   

 365   1        //Wait_ms_SPINOR(50); 
 366   1        AT25SF041_Write(Byte_Page_Program, *addr,dat.LUT_max_pos_floor);  
 367   1        Wait_ms_SPINOR(50); 
 368   1        ++*addr;
 369   1        
 370   1        AT25SF041_WriteEnable();
 371   1        //Wait_ms_SPINOR(50); 
 372   1        AT25SF041_Write(Byte_Page_Program, *addr,dat.LUT_max_pos_float);  
 373   1        Wait_ms_SPINOR(50); 
 374   1        ++*addr;
 375   1      
 376   1      
 377   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1331    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      37
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
