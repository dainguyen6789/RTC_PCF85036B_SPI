C51 COMPILER V9.52.0.0   AT25SF041                                                         02/18/2019 15:54:51 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE AT25SF041
OBJECT MODULE PLACED IN .\Obj\AT25SF041.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Application\Source\AT25SF041.c LARGE BROWSE INCDIR(.\Application\Header)
                    - DEBUG OBJECTEXTEND PRINT(.\Lis\AT25SF041.lst) TABS(2) OBJECT(.\Obj\AT25SF041.obj)

line level    source

   1          #include "AT25SF041.h"
   2          #include "stc15f2k60s2.h"
   3          void Wait_ms_SPINOR(int ms)
   4          {
   5   1        unsigned int De_Cnt;
   6   1        while( (ms--) != 0)
   7   1        {
   8   2          for(De_Cnt = 0; De_Cnt < 4; De_Cnt++); 
   9   2        }   
  10   1      }
  11          /*void AT25SF041_ChipErase(void)
  12          {
  13            int i;
  14            char opcode;
  15            opcode=Chip_Erase;
  16            //P4M1|=0x10;
  17            //P4M0&=~(1<<4);
  18            P4M1&=~(1<<1 |1<<2|1<<3);
  19            P4M0|=0x07;
  20            AT25SF041_CS_Clr();
  21            Wait_ms_SPINOR(1);
  22            
  23            for( i=0;i<8;i++)
  24            {
  25                  AT25SF041_SCK_Clr();
  26                  Wait_ms_SPINOR(1);
  27                  if( (opcode&0x80)==0x80 )      //
  28                  {
  29                      AT25SF041_SDI_Set();
  30                  } 
  31                    else
  32                  {
  33                      AT25SF041_SDI_Clr();
  34          
  35                  }
  36                  Wait_ms_SPINOR(1);    
  37                  AT25SF041_SCK_Set();
  38                  Wait_ms_SPINOR(1);
  39                  opcode <<= 1;                   //
  40          
  41          
  42            }
  43            
  44            AT25SF041_CS_Set();
  45            Wait_ms_SPINOR(10);
  46            while(Read_Status_Register_Byte1()&0x01==0x01);
  47            
  48          }
  49          void AT25SF041_WriteEnable(void)
  50          {
  51            int i;
  52            char write_en;
  53            write_en=Write_Enable;
  54            AT25SF041_CS_Clr();
C51 COMPILER V9.52.0.0   AT25SF041                                                         02/18/2019 15:54:51 PAGE 2   

  55          //Wait_ms_SPINOR(1);
  56            
  57            for( i=0;i<8;i++)
  58            {
  59                  AT25SF041_SCK_Clr();
  60                  Wait_ms_SPINOR(1);
  61                  if( (write_en&0x80)==0x80 )      //
  62                  {
  63                      AT25SF041_SDI_Set();
  64                  } 
  65                    else
  66                  {
  67                      AT25SF041_SDI_Clr();
  68          
  69                  }
  70                  Wait_ms_SPINOR(1);    
  71                  AT25SF041_SCK_Set();
  72                  Wait_ms_SPINOR(1);
  73                  write_en <<= 1;                   //
  74          
  75          
  76            }
  77            AT25SF041_CS_Set();
  78            Wait_ms_SPINOR(1);
  79            
  80          }
  81          
  82          
  83          void AT25SF041_Write(char opcode, unsigned long int addr,char dat)
  84          {
  85            int i;
  86            AT25SF041_CS_Clr();
  87            Wait_ms_SPINOR(1);
  88          
  89            //////////////////////////////////////////
  90            for( i=0;i<8;i++)
  91              {
  92                  AT25SF041_SCK_Clr();
  93                  Wait_ms_SPINOR(1);
  94                  if( (opcode&0x80)==0x80 )      //
  95                  {
  96                      AT25SF041_SDI_Set();
  97                  } 
  98                    else
  99                  {
 100                      AT25SF041_SDI_Clr();
 101          
 102                  }
 103                  Wait_ms_SPINOR(1);    
 104                  AT25SF041_SCK_Set();
 105                  Wait_ms_SPINOR(1);
 106                  opcode <<= 1;                   //
 107          
 108          
 109              }
 110            // SEND THE ADDR (24-bit)
 111            for( i=0;i<24;i++)
 112            {
 113                AT25SF041_SCK_Clr();
 114                Wait_ms_SPINOR(1);
 115                if( (addr&0x80)==0x80 )      //
 116                {
C51 COMPILER V9.52.0.0   AT25SF041                                                         02/18/2019 15:54:51 PAGE 3   

 117                    AT25SF041_SDI_Set();
 118                } 
 119                  else
 120                {
 121                    AT25SF041_SDI_Clr();
 122          
 123                }
 124                Wait_ms_SPINOR(1);    
 125                AT25SF041_SCK_Set();
 126                Wait_ms_SPINOR(1);
 127                addr <<= 1;
 128          
 129            }
 130            
 131              for( i=0;i<8;i++)
 132            {
 133                AT25SF041_SCK_Clr();
 134                Wait_ms_SPINOR(1);
 135                if( (dat&0x80)==0x80 )       //
 136                {
 137                    AT25SF041_SDI_Set();
 138                } 
 139                  else
 140                {
 141                    AT25SF041_SDI_Clr();
 142          
 143                }
 144                Wait_ms_SPINOR(1);    
 145                AT25SF041_SCK_Set();
 146                Wait_ms_SPINOR(1);
 147                dat <<= 1;
 148          
 149            }
 150            ///////////////////////////////////////
 151            AT25SF041_CS_Set();
 152            Wait_ms_SPINOR(1);
 153            
 154          }
 155          
 156          char  AT25SF041_Read(char opcode,unsigned long int addr)
 157          {
 158            char dat=0;
 159            int i;
 160            AT25SF041_CS_Clr();
 161            Wait_ms_SPINOR(1);
 162          
 163            //////////////////////////////////////////
 164            // Send the OPCODE
 165            for( i=0;i<8;i++)
 166            {
 167                AT25SF041_SCK_Clr();
 168                Wait_ms_SPINOR(1);
 169                if( (opcode&0x80)==0x80 )      //
 170                {
 171                    AT25SF041_SDI_Set();
 172                } 
 173                  else
 174                {
 175                    AT25SF041_SDI_Clr();
 176          
 177                }
 178                Wait_ms_SPINOR(1);    
C51 COMPILER V9.52.0.0   AT25SF041                                                         02/18/2019 15:54:51 PAGE 4   

 179                AT25SF041_SCK_Set();
 180                Wait_ms_SPINOR(1);
 181                opcode <<= 1;                   //
 182          
 183          
 184            }
 185            // SEND THE ADDR (24-bit)
 186            for( i=0;i<24;i++)
 187            {
 188                AT25SF041_SCK_Clr();
 189                Wait_ms_SPINOR(1);
 190                if( (addr&0x80)==0x80 )      //
 191                {
 192                    AT25SF041_SDI_Set();
 193                } 
 194                  else
 195                {
 196                    AT25SF041_SDI_Clr();
 197          
 198                }
 199                Wait_ms_SPINOR(1);    
 200                AT25SF041_SCK_Set();
 201                Wait_ms_SPINOR(1);
 202                addr <<= 1;
 203          
 204            }
 205            /////////////////////////////////////////
 206            // Store the output data from NOR FLash
 207            Wait_ms_SPINOR(10);
 208          
 209            AT25SF041_SDO_Set();
 210            Wait_ms_SPINOR(2);
 211            
 212            for( i=0;i<8;i++)
 213            {
 214                dat <<= 1;                //
 215                AT25SF041_SCK_Set();
 216                Wait_ms_SPINOR(1);
 217                AT25SF041_SCK_Clr();
 218                Wait_ms_SPINOR(1);
 219          
 220                if(AT25SF041_SDO)
 221                {
 222                  // INPUT BIT =1
 223                  dat |= 0x01;            //
 224                }
 225          
 226                //Wait_ms_SPINOR(1); 
 227                //AT25SF041_SCK_Set();
 228                //Wait_ms_SPINOR(1);
 229          
 230            } 
 231            
 232            ///////////////////////////////////////
 233            AT25SF041_CS_Set(); 
 234            Wait_ms_SPINOR(1);
 235            return dat;
 236          
 237          }
 238          
 239          
 240          
C51 COMPILER V9.52.0.0   AT25SF041                                                         02/18/2019 15:54:51 PAGE 5   

 241          char Read_Status_Register_Byte1(void)
 242          {
 243            char dat=0,opcode,count=0;
 244            int i=0;
 245            opcode=Read_Stat_Register_Byte1;
 246            AT25SF041_CS_Clr();
 247            Wait_ms_SPINOR(1);
 248          
 249            //////////////////////////////////////////
 250            // Send the OPCODE
 251            for( i=0;i<8;i++)
 252            {
 253                AT25SF041_SCK_Clr();
 254                Wait_ms_SPINOR(1);
 255                if( (opcode&0x80)==0x80 )      //
 256                {
 257                    AT25SF041_SDI_Set();
 258                } 
 259                  else
 260                {
 261                    AT25SF041_SDI_Clr();
 262          
 263                }
 264                Wait_ms_SPINOR(1);    
 265                AT25SF041_SCK_Set();
 266                Wait_ms_SPINOR(1);
 267                opcode <<= 1;                   //
 268          
 269          
 270            }
 271          
 272            /////////////////////////////////////////
 273            // Store the output data from NOR FLash
 274            Wait_ms_SPINOR(10);
 275          
 276            AT25SF041_SDO_Set();
 277            Wait_ms_SPINOR(2);
 278            for( i=0;i<8;i++)
 279            {
 280                dat <<= 1;                //
 281                AT25SF041_SCK_Set();
 282                Wait_ms_SPINOR(1);
 283                AT25SF041_SCK_Clr();
 284                Wait_ms_SPINOR(1);
 285          
 286                if(AT25SF041_SDO)
 287                {
 288                  // INPUT BIT =1
 289                  dat |= 0x01;            //
 290                }
 291          
 292            } 
 293            
 294            
 295            ///////////////////////////////////////
 296            AT25SF041_CS_Set(); 
 297            Wait_ms_SPINOR(1);
 298            return dat;
 299          }
 300          
 301          void SPI_NOR_Write_Data(struct data_to_store *dat,unsigned long int *addr)
 302          {
C51 COMPILER V9.52.0.0   AT25SF041                                                         02/18/2019 15:54:51 PAGE 6   

 303          
 304            
 305            AT25SF041_WriteEnable();
 306            AT25SF041_Write(Byte_Page_Program, addr,dat->month);
 307            *addr++;
 308            AT25SF041_WriteEnable();
 309            AT25SF041_Write(Byte_Page_Program, addr,dat->date); 
 310            Wait_ms_SPINOR(5);
 311          
 312            *addr++;
 313            AT25SF041_WriteEnable();
 314            AT25SF041_Write(Byte_Page_Program, addr,dat->hour); 
 315            Wait_ms_SPINOR(5);
 316          
 317            *addr++;
 318            AT25SF041_WriteEnable();
 319            AT25SF041_Write(Byte_Page_Program, addr,dat->min);
 320            Wait_ms_SPINOR(5);
 321          
 322            *addr++;
 323            AT25SF041_WriteEnable();
 324            AT25SF041_Write(Byte_Page_Program, addr,dat->calib_max_voltage_ADC);    
 325            Wait_ms_SPINOR(5);
 326            
 327            *addr++;
 328            AT25SF041_WriteEnable();
 329            AT25SF041_Write(Byte_Page_Program, addr,dat->calib_max_pos_floor);
 330            Wait_ms_SPINOR(5);
 331            *addr++;
 332            AT25SF041_WriteEnable();
 333            AT25SF041_Write(Byte_Page_Program, addr,dat->calib_max_pos_float);
 334            Wait_ms_SPINOR(5);
 335            
 336            *addr++;
 337            AT25SF041_WriteEnable();
 338            AT25SF041_Write(Byte_Page_Program, addr,dat->light_ADC);  
 339            Wait_ms_SPINOR(5);  
 340          
 341            *addr++;
 342            AT25SF041_WriteEnable();
 343            AT25SF041_Write(Byte_Page_Program, addr,dat->Voltage_at_LUT_pos); 
 344            Wait_ms_SPINOR(5);
 345            
 346            *addr++;
 347            AT25SF041_WriteEnable();
 348            AT25SF041_Write(Byte_Page_Program, addr,dat->LUT_max_pos_floor);  
 349            Wait_ms_SPINOR(5);
 350            
 351            *addr++;
 352            AT25SF041_WriteEnable();
 353            AT25SF041_Write(Byte_Page_Program, addr,dat->LUT_max_pos_float);  
 354            *addr++;
 355          
 356          
 357          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     30    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.52.0.0   AT25SF041                                                         02/18/2019 15:54:51 PAGE 7   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
