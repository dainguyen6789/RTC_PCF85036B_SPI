C51 COMPILER V9.52.0.0   IOEXPANDER_PI4IOE5V96248                                          04/25/2019 11:03:07 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE IOEXPANDER_PI4IOE5V96248
OBJECT MODULE PLACED IN .\Obj\IOExpander_PI4IOE5V96248.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE IOExpander_PI4IOE5V96248.c LARGE BROWSE INCDIR(.\Application\Header) DEB
                    -UG OBJECTEXTEND PRINT(.\Lis\IOExpander_PI4IOE5V96248.lst) TABS(2) OBJECT(.\Obj\IOExpander_PI4IOE5V96248.obj)

line level    source

   1          #include "PI4IOE5V96248.h"
   2          
   3          //unsigned int Read_PI4IOE5V96248(unsigned int command_code);
   4          
   5          void Write_PI4IOE5V96248(struct DATA_FOR_IO_6PORTS *dat);
   6          
   7          void Wait_ms_i2c(int ms)
   8          {
   9   1        unsigned int De_Cnt;
  10   1        while( (ms--) != 0)
  11   1        {
  12   2          for(De_Cnt = 0; De_Cnt < 1; De_Cnt++); 
  13   2        }   
  14   1      }
  15          
  16          void nop()
  17          {
  18   1        return;
  19   1      }
  20          void I2C_Start()
  21          {
  22   1        // set p5.4 as OUTPUT
  23   1        P5M0|=1<<4;
  24   1        P5M1&=~(1<<4);
  25   1        //==================================
  26   1        I2C_SCK=1;
  27   1        I2C_SDA=1;
  28   1        Wait_ms_i2c(2);
  29   1        I2C_SDA=0;
  30   1        Wait_ms_i2c(2);
  31   1        I2C_SCK=0;
  32   1        //Wait_ms_i2c(1);
  33   1        //Wait_ms_i2c(1);
  34   1      }
  35          
  36          void I2C_Stop()
  37          {
  38   1        I2C_SCK=0;
  39   1        I2C_SDA=0;
  40   1        Wait_ms_i2c(2);
  41   1        I2C_SCK=1;
  42   1        I2C_SDA=0;
  43   1        Wait_ms_i2c(4);
  44   1        I2C_SDA=1;
  45   1        //Wait_ms_i2c(2);
  46   1      
  47   1      }
  48          
  49          unsigned char I2C_ACK(void)
  50          {
  51   1        unsigned char i;
  52   1        unsigned char dat = 0;
  53   1      
  54   1        //I2C_SDA_Set();          //
C51 COMPILER V9.52.0.0   IOEXPANDER_PI4IOE5V96248                                          04/25/2019 11:03:07 PAGE 2   

  55   1        //for (i=0; i<1; i++)         //
  56   1        {
  57   2          dat <<= 1;                //
  58   2          I2C_SCK_Clr(); 
  59   2          Wait_ms_i2c(2);   //
  60   2          //nop();        
  61   2          if (I2C_SDA)        //If  PCF85063BTL_SDO is HIGH, dat will be 1(one) 
  62   2          {
  63   3            dat |= 0x01;            //
  64   3          }
  65   2          
  66   2      
  67   2          I2C_SCK_Set();       //
  68   2          Wait_ms_i2c(2);           //  
  69   2        }
  70   1        return dat;
  71   1      }
*** WARNING C280 IN LINE 51 OF IOExpander_PI4IOE5V96248.c: 'i': unreferenced local variable
  72          void uC_ACK()
  73          {
  74   1      
  75   1        unsigned char i;
  76   1        
  77   1        //for (i=0; i<1; i++)            //
  78   1        {
  79   2          //I2C_SCK_Clr(); 
  80   2          //Wait_ms_i2c(1);//   
  81   2          //if( (dat&0x80)==0x80 )       //
  82   2          {
  83   3              //I2C_SDA_Clr();
  84   3          }
  85   2      
  86   2          Wait_ms_i2c(2);           //
  87   2          I2C_SCK_Set();          //
  88   2                  //
  89   2          //dat <<= 1;                   //
  90   2          Wait_ms_i2c(2); 
  91   2          I2C_SCK_Clr();    
  92   2        }
  93   1      
  94   1      
  95   1        
  96   1      }
*** WARNING C280 IN LINE 75 OF IOExpander_PI4IOE5V96248.c: 'i': unreferenced local variable
  97          
  98          void uC_NACK()
  99          {
 100   1      
 101   1        unsigned char i;
 102   1        
 103   1        //for (i=0; i<1; i++)            //
 104   1        {
 105   2          I2C_SCK_Clr(); 
 106   2          //Wait_ms_i2c(1);//   
 107   2          //if( (dat&0x80)==0x80 )       //
 108   2          {
 109   3              I2C_SDA_Set();
 110   3          }
 111   2      
 112   2          Wait_ms_i2c(2);           //
 113   2          I2C_SCK_Set();          //
 114   2                  
C51 COMPILER V9.52.0.0   IOEXPANDER_PI4IOE5V96248                                          04/25/2019 11:03:07 PAGE 3   

 115   2          //dat <<= 1;                   //
 116   2          Wait_ms_i2c(2); 
 117   2          I2C_SCK_Clr();
 118   2          Wait_ms_i2c(2);
 119   2          I2C_SDA_Clr();    
 120   2        }
 121   1      
 122   1      
 123   1        
 124   1      }
*** WARNING C280 IN LINE 101 OF IOExpander_PI4IOE5V96248.c: 'i': unreferenced local variable
 125          
 126          
 127          
 128          void I2C_SendByte(unsigned char dat)// Send dat to SPI device/Slave
 129          {
 130   1        unsigned char i;
 131   1        
 132   1        for (i=0; i<8; i++)            //
 133   1        {
 134   2          I2C_SCK_Clr(); 
 135   2          //Wait_ms_i2c(1);//   
 136   2          if( (dat&0x80)==0x80 )       //
 137   2          {
 138   3              I2C_SDA_Set();
 139   3          }
 140   2          else
 141   2          {
 142   3              I2C_SDA_Clr();
 143   3          }
 144   2          Wait_ms_i2c(2);           //
 145   2          I2C_SCK_Set();          //
 146   2                  //
 147   2          dat <<= 1;                   //
 148   2          Wait_ms_i2c(2);      
 149   2        }
 150   1      }
 151          void Write_PI4IOE5V96248(struct DATA_FOR_IO_6PORTS *xdat)
 152          {
 153   1        I2C_Start();
 154   1        Wait_ms_i2c(1);
 155   1        I2C_SendByte(PI4IOE5V96248_Write_Addr);
 156   1        if(I2C_ACK()==0)
 157   1        {
 158   2          I2C_SendByte(xdat->port0);
 159   2        }
 160   1        
 161   1        if(I2C_ACK()==0)
 162   1        {
 163   2          I2C_SendByte(xdat->port1);
 164   2        }
 165   1        if(I2C_ACK()==0)
 166   1        {
 167   2          I2C_SendByte(xdat->port2);
 168   2        }
 169   1        if(I2C_ACK()==0)
 170   1        {
 171   2          I2C_SendByte(xdat->port3);
 172   2        }
 173   1        
 174   1        if(I2C_ACK()==0)
 175   1        {
C51 COMPILER V9.52.0.0   IOEXPANDER_PI4IOE5V96248                                          04/25/2019 11:03:07 PAGE 4   

 176   2          I2C_SendByte(xdat->port4);
 177   2        }
 178   1        if(I2C_ACK()==0)
 179   1        {
 180   2          I2C_SendByte(xdat->port5);
 181   2        } 
 182   1        
 183   1        if(I2C_ACK()==0)  
 184   1          I2C_Stop();
 185   1      }
 186          unsigned char I2C_ReceiveByte(void)
 187          {
 188   1        unsigned char i;
 189   1        unsigned char dat = 0;
 190   1      
 191   1        I2C_SDA_Set();          //
 192   1        for (i=0; i<8; i++)         //
 193   1        {
 194   2          dat <<= 1;                //
 195   2          I2C_SCK_Clr();       //
 196   2          Wait_ms_i2c(1);        //
 197   2              
 198   2          if (I2C_SDA)        //If  PCF85063BTL_SDO is HIGH, dat will be 1(one) 
 199   2          {
 200   3            dat |= 0x01;            //
 201   3          }
 202   2          I2C_SCK_Set();       //
 203   2          Wait_ms_i2c(1);        // 
 204   2        }
 205   1        return dat;
 206   1      }
 207          
 208          unsigned int Read_VEML6030_ALS(unsigned char command_code)
 209          {
 210   1          unsigned int temp_dat_l=0,temp_dat_h=0;
 211   1          //====================================
 212   1          I2C_Start();
 213   1          Wait_ms_i2c(2);
 214   1          I2C_SendByte(VEML6030_Write_Addr);
 215   1          if(I2C_ACK()==0)
 216   1          {
 217   2            I2C_SendByte(command_code);
 218   2            
 219   2          } 
 220   1          if(I2C_ACK()==0)
 221   1          {
 222   2            Wait_ms_i2c(2);
 223   2            I2C_SCK=0;
 224   2            Wait_ms_i2c(1); 
 225   2            I2C_Stop(); 
 226   2            Wait_ms_i2c(2);
 227   2            I2C_Start();
 228   2          }
 229   1          Wait_ms_i2c(2);
 230   1          I2C_SendByte(VEML6030_Read_Addr);
 231   1          
 232   1          if(I2C_ACK()==0)
 233   1          {
 234   2            P4M1 |=1<<7;  //~ bitwise NOT// KEy to work
 235   2            P4M0 &=~ (1<<7); // KEy to work
 236   2            temp_dat_l=I2C_ReceiveByte(); // data from proximity sensor
 237   2            P4M1 &=~( 1<<7 );  //~ bitwise NOT//KEy to work
C51 COMPILER V9.52.0.0   IOEXPANDER_PI4IOE5V96248                                          04/25/2019 11:03:07 PAGE 5   

 238   2            P4M0 &=~( (1<<7)); //KEy to work
 239   2          }
 240   1          //Wait_ms_i2c(1); 
 241   1          
 242   1          uC_ACK();
 243   1          
 244   1          Wait_ms_i2c(4);
 245   1          //Set P4.7 as input
 246   1          P4M1 |=1<<7;  //~ bitwise NOT// KEy to work
 247   1          P4M0 &=~( (1<<7) );   //KEy to work 
 248   1          temp_dat_h=I2C_ReceiveByte();
 249   1          //Set P4.7 as OUTPUT
 250   1          P4M1 &=~( 1<<7);  //~ bitwise NOT//KEy to work
 251   1          P4M0 &=~( 1<<7 ); //KEy to work
 252   1          uC_NACK();
 253   1          Wait_ms_i2c(2);
 254   1          I2C_Stop();
 255   1          Wait_ms_i2c(2);
 256   1      
 257   1        return ((temp_dat_h<<8)|temp_dat_l);
 258   1      }
 259          
 260          
 261          void Write_VEML6030_ALS(unsigned char command_code,unsigned char dat_h,unsigned char dat_l)// write 16-bit
             - of data
 262          {
 263   1        
 264   1        P4M1 &=~( 1<<7);  //~ bitwise NOT//KEy to work
 265   1        P4M0 &=~( 1<<7 ); //KEy to work
 266   1        I2C_Start();
 267   1        Wait_ms_i2c(1);
 268   1        I2C_SendByte(VEML6030_Write_Addr);
 269   1        if(I2C_ACK()==0)
 270   1        {
 271   2            P4M1 &=~( 1<<7);  //~ bitwise NOT//KEy to work
 272   2            P4M0 &=~( 1<<7 ); //KEy to work
 273   2          I2C_SendByte(command_code);
 274   2        }
 275   1        if(I2C_ACK()==0)
 276   1          I2C_SendByte(dat_l);
 277   1      
 278   1        if(I2C_ACK()==0)
 279   1          I2C_SendByte(dat_h);
 280   1        
 281   1        if(I2C_ACK()==0)  
 282   1          I2C_Stop();
 283   1      
 284   1      
 285   1        
 286   1      }
 287          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    625    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.52.0.0   IOEXPANDER_PI4IOE5V96248                                          04/25/2019 11:03:07 PAGE 6   


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
