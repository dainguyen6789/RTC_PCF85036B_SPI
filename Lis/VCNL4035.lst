C51 COMPILER V9.52.0.0   VCNL4035                                                          08/23/2018 17:34:54 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE VCNL4035
OBJECT MODULE PLACED IN .\Obj\VCNL4035.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE VCNL4035.c LARGE BROWSE INCDIR(.\Application\Header) DEBUG OBJECTEXTEND 
                    -PRINT(.\Lis\VCNL4035.lst) TABS(2) OBJECT(.\Obj\VCNL4035.obj)

line level    source

   1          #include "VCNL4035X01.h"
   2          
   3          unsigned int Read_VCNL4035X(unsigned int command_code);
   4          void Write_VCNL4035X(unsigned char  command_code,unsigned char dat_h,unsigned char  dat_l);
   5          void Wait_ms_iic(int ms)
   6          {
   7   1        unsigned int De_Cnt;
   8   1        while( (ms--) != 0)
   9   1        {
  10   2          for(De_Cnt = 0; De_Cnt < 9; De_Cnt++); 
  11   2        }   
  12   1      }
  13          
  14          void Wait_ms_i2c(int ms)
  15          {
  16   1        unsigned int De_Cnt;
  17   1        while( (ms--) != 0)
  18   1        {
  19   2          for(De_Cnt = 0; De_Cnt < 1; De_Cnt++); 
  20   2        }   
  21   1      }
  22          void nop()
  23          {
  24   1        return;
  25   1      }
  26          void I2C_Start()
  27          {
  28   1      
  29   1        I2C_SCK=1;
  30   1        I2C_SDA=1;
  31   1        Wait_ms_iic(2);
  32   1        I2C_SDA=0;
  33   1        Wait_ms_i2c(2);
  34   1        I2C_SCK=0;
  35   1        //Wait_ms_i2c(1);
  36   1        //Wait_ms_iic(1);
  37   1      }
  38          
  39          void I2C_Stop()
  40          {
  41   1        I2C_SCK=0;
  42   1        I2C_SDA=0;
  43   1        Wait_ms_i2c(2);
  44   1        I2C_SCK=1;
  45   1        I2C_SDA=0;
  46   1        Wait_ms_i2c(4);
  47   1        I2C_SDA=1;
  48   1        //Wait_ms_i2c(2);
  49   1      
  50   1      }
  51          
  52          unsigned char I2C_ACK(void)
  53          {
  54   1        unsigned char i;
C51 COMPILER V9.52.0.0   VCNL4035                                                          08/23/2018 17:34:54 PAGE 2   

  55   1        unsigned char dat = 0;
  56   1      
  57   1        //I2C_SDA_Set();          //
  58   1        //for (i=0; i<1; i++)         //
  59   1        {
  60   2          dat <<= 1;                //
  61   2          I2C_SCK_Clr(); 
  62   2          Wait_ms_i2c(2);   //
  63   2          //nop();        
  64   2          if (I2C_SDA)        //If  PCF85063BTL_SDO is HIGH, dat will be 1(one) 
  65   2          {
  66   3            dat |= 0x01;            //
  67   3          }
  68   2          
  69   2      
  70   2          I2C_SCK_Set();       //
  71   2          Wait_ms_i2c(2);           //  
  72   2        }
  73   1        return dat;
  74   1      }
*** WARNING C280 IN LINE 54 OF VCNL4035.c: 'i': unreferenced local variable
  75          void uC_ACK()
  76          {
  77   1      
  78   1        unsigned char i;
  79   1        
  80   1        //for (i=0; i<1; i++)            //
  81   1        {
  82   2          //I2C_SCK_Clr(); 
  83   2          //Wait_ms_i2c(1);//   
  84   2          //if( (dat&0x80)==0x80 )       //
  85   2          {
  86   3              //I2C_SDA_Clr();
  87   3          }
  88   2      
  89   2          Wait_ms_i2c(2);           //
  90   2          I2C_SCK_Set();          //
  91   2                  //
  92   2          //dat <<= 1;                   //
  93   2          Wait_ms_i2c(2); 
  94   2          I2C_SCK_Clr();    
  95   2        }
  96   1      
  97   1      
  98   1        
  99   1      }
*** WARNING C280 IN LINE 78 OF VCNL4035.c: 'i': unreferenced local variable
 100          
 101          void uC_NACK()
 102          {
 103   1      
 104   1        unsigned char i;
 105   1        
 106   1        //for (i=0; i<1; i++)            //
 107   1        {
 108   2          I2C_SCK_Clr(); 
 109   2          //Wait_ms_i2c(1);//   
 110   2          //if( (dat&0x80)==0x80 )       //
 111   2          {
 112   3              I2C_SDA_Set();
 113   3          }
 114   2      
C51 COMPILER V9.52.0.0   VCNL4035                                                          08/23/2018 17:34:54 PAGE 3   

 115   2          Wait_ms_i2c(2);           //
 116   2          I2C_SCK_Set();          //
 117   2                  
 118   2          //dat <<= 1;                   //
 119   2          Wait_ms_i2c(2); 
 120   2          I2C_SCK_Clr();
 121   2          Wait_ms_i2c(2);
 122   2          I2C_SDA_Clr();    
 123   2        }
 124   1      
 125   1      
 126   1        
 127   1      }
*** WARNING C280 IN LINE 104 OF VCNL4035.c: 'i': unreferenced local variable
 128          
 129          void I2C_Init()
 130          {
 131   1          //P41 SDA,P42 SCL quasi-bidirectional
 132   1      
 133   1        P3M1 &=~( (1<<1) | (1<<2) );  //~ bitwise NOT
 134   1        P3M0 &=~( (1<<1) | (1<<2) );  
 135   1        //P4M1 |=0x04;// SCK OPen Drain output
 136   1        //P4M0 |=0x04;
 137   1        //Write_VCNL4035X(PS_CONF1,0x20,0x00);
 138   1        
 139   1        Write_VCNL4035X(PS_CONF1,0x00,0x00);//  1 = typical sensitivity mode (two step mode)
 140   1        //Write_VCNL4035X(PS_CONF3,0x0F,0x80);
 141   1        Write_VCNL4035X(PS_CONF3,0x07,0x80);// 20mA
 142   1      }
 143          
 144          
 145          void I2C_SendByte(unsigned char dat)// Send dat to SPI device/Slave
 146          {
 147   1        unsigned char i;
 148   1        
 149   1        for (i=0; i<8; i++)            //
 150   1        {
 151   2          I2C_SCK_Clr(); 
 152   2          //Wait_ms_i2c(1);//   
 153   2          if( (dat&0x80)==0x80 )       //
 154   2          {
 155   3              I2C_SDA_Set();
 156   3          }
 157   2          else
 158   2          {
 159   3              I2C_SDA_Clr();
 160   3          }
 161   2          Wait_ms_i2c(2);           //
 162   2          I2C_SCK_Set();          //
 163   2                  //
 164   2          dat <<= 1;                   //
 165   2          Wait_ms_i2c(2);      
 166   2        }
 167   1      }
 168          
 169          
 170          
 171          unsigned char I2C_ReceiveByte(void)
 172          {
 173   1        unsigned char i;
 174   1        unsigned char dat = 0;
 175   1        
C51 COMPILER V9.52.0.0   VCNL4035                                                          08/23/2018 17:34:54 PAGE 4   

 176   1      
 177   1        //I2C_SDA_Set();          //
 178   1        for (i=0; i<8; i++)         //
 179   1        {
 180   2          dat <<= 1;                //
 181   2          I2C_SCK_Clr();       //
 182   2          Wait_ms_i2c(2);        //
 183   2              
 184   2          if (I2C_SDA)        //If  I2C_SDO is HIGH, dat will be 1(one) , I2C_SDO is defined in .h file
 185   2          {
 186   3            dat |= 0x01;            //
 187   3          }
 188   2          I2C_SCK_Set();       //
 189   2          Wait_ms_i2c(2);
 190   2          if (i==7)
 191   2          {
 192   3            I2C_SCK_Clr();
 193   3            I2C_SDA_Clr();      
 194   3          }
 195   2          //  
 196   2        }
 197   1        return dat;
 198   1      }
 199          void Write_VCNL4035X(unsigned char  command_code,unsigned char dat_h,unsigned char  dat_l)
 200          {
 201   1        I2C_Start();
 202   1        Wait_ms_i2c(1);
 203   1        I2C_SendByte(VCNL4035_addr);
 204   1        if(I2C_ACK()==0)
 205   1        {
 206   2          I2C_SendByte(command_code);
 207   2        }
 208   1        if(I2C_ACK()==0)
 209   1          I2C_SendByte(dat_l);
 210   1      
 211   1        if(I2C_ACK()==0)
 212   1          I2C_SendByte(dat_h);
 213   1        
 214   1        if(I2C_ACK()==0)  
 215   1          I2C_Stop();
 216   1      }
 217          
 218          unsigned int Read_VCNL4035(unsigned int command_code)
 219          {
 220   1        unsigned int temp_dat=0,temp_dat_l=0,temp_dat_h=0;
 221   1        
 222   1          I2C_Start();
 223   1          Wait_ms_i2c(2);
 224   1          I2C_SendByte((VCNL4035_addr)|I2C_READ);
 225   1          
 226   1        if(I2C_ACK()==0)
 227   1        {
 228   2          P3M1 |=0x02;  //~ bitwise NOT// KEy to work
 229   2          P3M0 &=~( (1<<1) | (1<<2) ); // KEy to work
 230   2          temp_dat_l=I2C_ReceiveByte(); // data from proximity sensor
 231   2          P3M1 &=~( (1<<1) | (1<<2) );  //~ bitwise NOT//KEy to work
 232   2          P3M0 &=~( (1<<1) | (1<<2) ); //KEy to work
 233   2        }
 234   1        //Wait_ms_i2c(1); 
 235   1        
 236   1        uC_ACK();
 237   1        
C51 COMPILER V9.52.0.0   VCNL4035                                                          08/23/2018 17:34:54 PAGE 5   

 238   1        Wait_ms_i2c(4);
 239   1        P3M1 |=0x02;  //~ bitwise NOT// KEy to work
 240   1        P3M0 &=~( (1<<1) | (1<<2) );  //KEy to work 
 241   1        temp_dat_h=I2C_ReceiveByte();
 242   1        P3M1 &=~( (1<<1) | (1<<2) );  //~ bitwise NOT//KEy to work
 243   1        P3M0 &=~( (1<<1) | (1<<2) ); //KEy to work
 244   1        uC_NACK();
 245   1        Wait_ms_i2c(2);
 246   1        I2C_Stop();
 247   1        Wait_ms_i2c(2);
 248   1          I2C_Start();
 249   1        Wait_ms_i2c(2);
 250   1        I2C_SendByte((VCNL4035_addr)|I2C_WRITE);
 251   1        if(I2C_ACK()==0)
 252   1        {
 253   2          I2C_SendByte(command_code);
 254   2          
 255   2        } 
 256   1        if(I2C_ACK()==0)
 257   1        {
 258   2          //Wait_ms_iic(2);
 259   2          I2C_SCK=0;
 260   2          Wait_ms_iic(1); 
 261   2          I2C_Stop(); 
 262   2          Wait_ms_iic(2);
 263   2        } 
 264   1        return ((temp_dat_h<<8)|temp_dat_l);
 265   1      }
 266          
 267          void DisplayLCD_VCNL4035(unsigned char dat)
 268          {
 269   1      
 270   1      }
*** WARNING C280 IN LINE 267 OF VCNL4035.c: 'dat': unreferenced local variable
 271          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    496    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
