C51 COMPILER V9.52.0.0   UART1                                                             03/20/2019 12:17:07 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE UART1
OBJECT MODULE PLACED IN .\Obj\UART1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Application\Source\UART1.c LARGE BROWSE INCDIR(.\Application\Header) DEB
                    -UG OBJECTEXTEND PRINT(.\Lis\UART1.lst) TABS(2) OBJECT(.\Obj\UART1.obj)

line level    source

   1          #include "stc15f2k60s2.h"
   2          #include "PCF85063BTL.h"
   3          #include <stdlib.h>
   4          #include "UART1.h"
   5          #define TBAUD (65536-FOSC/4/BAUD)
   6          #define FOSC 18432000L
   7          #define BAUD 115200
   8          
   9          
  10          
  11          
  12          unsigned char SPI_ReadTime(unsigned char addr);
  13          void SPI_WriteTime(unsigned char val,unsigned char addr);
  14          unsigned char ASCIItoBCD(unsigned char ascii[2]); // time format hh:mm:ss
  15          void SendUART1(unsigned char dat);
  16          
  17          
  18          
  19          
  20          
  21          void initUART1(void)
  22          {
  23   1        SCON=0x50; //0101 0000 8-bit uart,  baud rate variable
  24   1        AUXR |=0x95;//10010101 Timer2 as Baud Rate generator
  25   1        T2L=TBAUD;
  26   1        T2H=TBAUD>>8; 
  27   1        ES=1;           // enable uart1 interrupt
  28   1        EA=1;           // each interrupt source will be enable or disable by setting its interrupt bit
  29   1        //PS=0;           // Serial Port 1 interrupt priority control bit, DS page 561
  30   1      }
  31          
  32          
  33          
  34          
  35           void SendString(char *s)
  36          {
  37   1        while(*s)
  38   1        {
  39   2          SendUART1(*s++);
  40   2        }
  41   1      }
  42          
  43          unsigned char ten(unsigned char BCD)
  44          {
  45   1        return (BCD)>>4;
  46   1      }
  47          unsigned char unit(unsigned char BCD)
  48          {
  49   1      
  50   1        //unit=BCD&0x0f;
  51   1        //dec=ten*10+unit;
  52   1        return BCD&0x0f;
  53   1      }
  54          unsigned char DectoBCD(unsigned char dec)
C51 COMPILER V9.52.0.0   UART1                                                             03/20/2019 12:17:07 PAGE 2   

  55          {
  56   1        
  57   1        return dec;
  58   1      }
  59          //if dat=1, we need to use ASCII value to display "1" on UART1
  60          unsigned char ASCII_Letter(unsigned char dat)
  61          {
  62   1        
  63   1        return dat+48;
  64   1      }
  65          
  66          unsigned char ASCIItoBCD(unsigned char ascii[2]) // time format hh:mm:ss
  67          {
  68   1        unsigned char dec_val,ten, unit;
  69   1        dec_val=atoi(ascii);
  70   1        ten=dec_val/10;
  71   1        unit=dec_val%10;
  72   1        return ten<<4|unit;
  73   1        
  74   1      }
  75          
  76          void SendDecValtoUART(unsigned char dat)
  77          {
  78   1        unsigned char hundred, ten, unit;
  79   1        hundred=dat/100;
  80   1        ten=(dat-hundred*100)/10;
  81   1        unit=dat-hundred*100-ten*10;
  82   1        SendUART1(hundred+48);// ASCII Value
  83   1        SendUART1(ten+48);
  84   1        SendUART1(unit+48);
  85   1        
  86   1      }
  87          
  88          void SendBCDValtoUART(unsigned char dat)
  89          {
  90   1        unsigned char ten, unit;
  91   1        ten=dat/16;
  92   1        unit=dat%16;
  93   1        SendUART1(ten+48);
  94   1        SendUART1(unit+48); 
  95   1        
  96   1      }
  97          void SendSPIDataToUART(unsigned char dat,unsigned long int adr)
  98          {
  99   1        if(adr%131==0)
 100   1        {
 101   2          SendString("\r\n Sample (ADC_SUN,ADC_Cell,calib_pos_floor_float): ");
 102   2          SendDecValtoUART(dat);
 103   2          SendString(",");
 104   2        }
 105   1        //ADC val of solar cell when calib
 106   1        else if(adr%131<120  && adr%131!=0)
 107   1        {
 108   2          SendDecValtoUART(dat);
 109   2          SendString(" ;");
 110   2      
 111   2        }
 112   1        
 113   1        else if (adr%131>=120)
 114   1        {
 115   2          if(adr%131==120 )
 116   2          {
C51 COMPILER V9.52.0.0   UART1                                                             03/20/2019 12:17:07 PAGE 3   

 117   3            SendString("MM-DD-HH-MN-MAX_CELL_VOL-MAX_CALIB_POS[2]-SUNLIGHT_ADC-ADC_LUT-PosLUT[2] ");
 118   3      
 119   3            SendBCDValtoUART(dat);
 120   3            SendString(",");
 121   3          }
 122   2          else if(adr%131==121)
 123   2          {
 124   3            SendBCDValtoUART(dat);
 125   3            SendString(",");
 126   3          } 
 127   2          else if(adr%131==122)
 128   2          {
 129   3            SendBCDValtoUART(dat);
 130   3            SendString(",");
 131   3          }       
 132   2          else if(adr%131==123)
 133   2          {
 134   3            SendBCDValtoUART(dat);
 135   3            SendString(",");
 136   3          }     
 137   2          else
 138   2          {
 139   3            SendDecValtoUART(dat);
 140   3            SendString(":");
 141   3          }
 142   2        }
 143   1      }
 144          
 145          void SendUART1(unsigned char dat)
 146          {
 147   1        while(busy);
 148   1        busy=1;
 149   1        ACC=dat;
 150   1        SBUF=ACC;
 151   1      }
 152          
 153          
 154          
 155           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    688    ----
   CONSTANT SIZE    =    134    ----
   XDATA SIZE       =   ----      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
