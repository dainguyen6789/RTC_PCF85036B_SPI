C51 COMPILER V9.52.0.0   LCD_DRIVER_SPLC780D                                               08/21/2019 10:34:43 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LCD_DRIVER_SPLC780D
OBJECT MODULE PLACED IN .\Obj\LCd_Driver_SPLC780D.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Application\Source\LCd_Driver_SPLC780D.c LARGE BROWSE INCDIR(.\Applicati
                    -on\Header) DEBUG OBJECTEXTEND PRINT(.\Lis\LCd_Driver_SPLC780D.lst) TABS(2) OBJECT(.\Obj\LCd_Driver_SPLC780D.obj)

line level    source

   1          #include "LCD_Driver_SPLC780D.h"
   2          #include "stc15f2k60s2.h"
   3          
   4          
   5          void Wait_ms(int ms);
   6          void Command(unsigned char dat);
   7          void WriteData(unsigned char dat);
   8          
   9          void LCD_Init(void)
  10          {
  11   1        P1M1 =0x00;  
  12   1        P1M0 =0xFF; 
  13   1      
  14   1        Wait_ms(150);
  15   1        Command(0x03);
  16   1        
  17   1        Wait_ms(30);
  18   1        Command(0x03);
  19   1        
  20   1        Wait_ms(10);
  21   1        Command(0x03);
  22   1        
  23   1        Wait_ms(10);
  24   1        Command(0x02);
  25   1        //Command(0x08);  
  26   1        Wait_ms(1);
  27   1        
  28   1        //Wait_ms(50);
  29   1        Command(0x02);  
  30   1        Command(0x08);
  31   1        
  32   1        Command(0x00);
  33   1        Command(0x0E);
  34   1        
  35   1        Command(0x00);  
  36   1        Command(0x06);
  37   1        Wait_ms(20);
  38   1        
  39   1      }
  40          void WriteData(unsigned char dat)
  41          { 
  42   1      
  43   1        /*LCD_E=1;
  44   1        Wait_ms(10);
  45   1        LCD_E=0;*/
  46   1        LCD_RS=1;
  47   1        LCD_RW=0;
  48   1        // 4 high bits
  49   1        LCD_D7=(dat&(1<<7)) >>7;
  50   1        LCD_D6=(dat&(1<<6)) >>6;
  51   1        LCD_D5=(dat&(1<<5)) >>5;
  52   1        LCD_D4=(dat&(1<<4)) >>4;
  53   1        LCD_E=1;
  54   1        Wait_ms(1);
C51 COMPILER V9.52.0.0   LCD_DRIVER_SPLC780D                                               08/21/2019 10:34:43 PAGE 2   

  55   1        LCD_E=0;
  56   1        // 4 low bits
  57   1        LCD_D7=(dat&(1<<3)) >>3;
  58   1        LCD_D6=(dat&(1<<2)) >>2;
  59   1        LCD_D5=(dat&(1<<1)) >>1;
  60   1        LCD_D4=dat&1; 
  61   1        //LCD_RS=0;
  62   1        LCD_E=1;
  63   1        Wait_ms(10);
  64   1        LCD_E=0;  
  65   1        LCD_RS=0;
  66   1          
  67   1      }
  68          
  69          void Command(unsigned char dat)//dat=0x0X
  70          { 
  71   1        LCD_RS=0;
  72   1        LCD_RW=0;
  73   1        //we only consider 4 low bits
  74   1        if((dat&(1<<3)) >>3)
  75   1          LCD_D7=1;
  76   1        else
  77   1          LCD_D7=0;
  78   1        if((dat&(1<<2)) >>2)
  79   1          LCD_D6=1;
  80   1        else
  81   1          LCD_D6=0; 
  82   1        if((dat&(1<<1)) >>1)
  83   1          LCD_D5=1;
  84   1        else
  85   1          LCD_D5=0; 
  86   1        if(dat&0x01)
  87   1          LCD_D4=1;
  88   1        else
  89   1          LCD_D4=0; 
  90   1        LCD_E=1;
  91   1        Wait_ms(10);
  92   1        LCD_E=0;  
  93   1      }
  94          
  95          void Wait_ms(int ms)
  96          {
  97   1        unsigned int De_Cnt;
  98   1        while( (ms--) != 0)
  99   1        {
 100   2          for(De_Cnt = 0; De_Cnt < 600; De_Cnt++); 
 101   2        }   
 102   1      }
 103           void DisplayLCD(unsigned char BCD)
 104          {
 105   1        unsigned char first_digit, second_digit;
 106   1        first_digit=BCD>>4 | 0x30;
 107   1        second_digit=BCD&0x0F | 0x30;
 108   1        //write 1st letter 
 109   1        WriteData(first_digit);
 110   1        // write second letter
 111   1        WriteData(second_digit);
 112   1      
 113   1      }
 114          
 115          void LCD_return_home(void)
 116          {
C51 COMPILER V9.52.0.0   LCD_DRIVER_SPLC780D                                               08/21/2019 10:34:43 PAGE 3   

 117   1        Command(0x00);
 118   1        Command(0x02);
 119   1        
 120   1      }
 121          void LCD_clear(void)
 122          {
 123   1        Command(0x00);
 124   1        Command(0x01);
 125   1        
 126   1      }
 127          
 128          void Display_Line(int line)
 129          {
 130   1        if (line==1)
 131   1        { 
 132   2          Command(0x08);
 133   2          Command(0x00);
 134   2        }
 135   1        else
 136   1        {
 137   2          Command(0x0C);
 138   2          Command(0x00);
 139   2        }
 140   1      }
 141          
 142          void Display_Pos(float sign_dat)
 143          {
 144   1        unsigned char unit, ten, hundred,thousand;
 145   1        unsigned char after_dot;
 146   1        int dat;
 147   1        dat=abs(sign_dat);
 148   1        if (sign_dat>0)
 149   1          after_dot=(unsigned char)((sign_dat-dat)*10);
 150   1        else
 151   1          after_dot=(unsigned char)((-sign_dat-dat)*10);
 152   1        
 153   1        unit =dat%10;// remainder after division
 154   1        thousand=dat/1000;
 155   1        hundred=(dat-thousand*1000)/100;
 156   1        ten=(dat-thousand*1000-hundred*100)/10;
 157   1        if (sign_dat>=0)
 158   1        {
 159   2          WriteData(thousand|0x30);
 160   2          WriteData(hundred|0x30);
 161   2          WriteData(ten|0x30);
 162   2          WriteData(unit|0x30);
 163   2          WriteData(0x2E);//.
 164   2          WriteData((after_dot)|0x30);
 165   2          //WriteData(0x6D);//m
 166   2          //WriteData(0x6D);//m
 167   2          //WriteData(0x20);// "blank"
 168   2        }
 169   1        else
 170   1        {
 171   2          
 172   2          WriteData(0x2D);// "-"
 173   2          WriteData(thousand|0x30);
 174   2          WriteData(hundred|0x30);
 175   2          WriteData(ten|0x30);
 176   2          WriteData(unit|0x30);
 177   2          WriteData(0x2E);//.
 178   2          WriteData(after_dot|0x30);
C51 COMPILER V9.52.0.0   LCD_DRIVER_SPLC780D                                               08/21/2019 10:34:43 PAGE 4   

 179   2          //WriteData(0x6D);//m
 180   2          //WriteData(0x6D);//m
 181   2      
 182   2        }
 183   1        return;
 184   1      }
 185          
 186          //float abs(float dat)
 187          //{
 188          //  if (dat>0)
 189          //    return dat;
 190          //  else
 191          //    return -dat;
 192          //}
 193          
 194          
 195          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    721    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
