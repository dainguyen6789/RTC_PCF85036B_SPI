C51 COMPILER V9.52.0.0   KEYPAD                                                            03/22/2019 09:41:50 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KEYPAD
OBJECT MODULE PLACED IN .\Obj\KeyPad.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Application\Source\KeyPad.c LARGE BROWSE INCDIR(.\Application\Header) DEBUG
                    - OBJECTEXTEND PRINT(.\Lis\KeyPad.lst) TABS(2) OBJECT(.\Obj\KeyPad.obj)

line level    source

   1          #include "stc15f2k60s2.h"
   2          #include "KeyPad.h"
   3          #include "PCF85063BTL.h"
   4          #include "LCD_Driver_SPLC780D.h"
   5          //#include "Receiver_Position_Data.h"
   6          
   7          void DisplayLCD(unsigned char BCD);
   8          void WriteData(unsigned char dat);
   9          
  10          void SPI_WriteTime(unsigned char val,unsigned char addr);
  11          void Command(unsigned char dat);
  12          void LCD_clear(void);
  13          //=============================================
  14          bit move=0;
  15          bit small_move=0;
  16          bit direction=0;
  17          bit auto_move=0;
  18          bit selected_motor=0;
  19          bit calib_mode=0;
  20          //=============================================
  21          void Delay_ms(unsigned int ms)
  22          {
  23   1        unsigned int De_Cnt;
  24   1        while( (ms--) != 0)
  25   1        {
  26   2          for(De_Cnt = 0; De_Cnt < 600; De_Cnt++); 
  27   2        }             
  28   1      }
  29          unsigned char Key_Scan(void)
  30          {
  31   1        unsigned char KeyTemp1,KeyTemp2;
  32   1        unsigned char KeyValue;
  33   1      
  34   1        //
  35   1        KEYPORT &=(~((1<<Column1)|(1<<Column2)|(1<<Column3)|(1<<Column4))); // ~(00000010 | 00000100 | 00001000)=
             -1111*000*1: set three columns equal to Zero
  36   1        //
  37   1        //0010 0000
  38   1        KEYPORT |= (1<<Line1) | (1<<Line2) | (1<<Line3) | (1<<Line4) ;  //10000000 | 01000000 | 00100000=*111*000
             -00: Set three columns equal to 1
  39   1        //    
  40   1        KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));  //~(10000000 | 01000000 | 00100000)=
             -00011111
  41   1        if(KeyTemp1!=0xff)      //
  42   1        { 
  43   2          //Delay_ms(10);         //
  44   2          KeyTemp1=KEYPORT | ( ~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)) );  //~(10000000 | 01000000 | 0010000
             -0)=00011111
  45   2          if(KeyTemp1!=0xff)      //
  46   2          {
  47   3            //COL1 COL2 COL3
  48   3            //0     1     1
  49   3            KEYPORT &=(~(1<<Column1)); //0 1 1 1
  50   3            KEYPORT |= (1<<Column2)|(1<<Column3)|(1<<Column4);//
C51 COMPILER V9.52.0.0   KEYPAD                                                            03/22/2019 09:41:50 PAGE 2   

  51   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));//  KEYPORT | 00011111
  52   3            if(KeyTemp1!=0xff)      //
  53   3            {
  54   4              while(KeyTemp1!=0xff) // if pressed any key on COL1
  55   4              { 
  56   5                KeyTemp2=KeyTemp1;  
  57   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));  // read the data, KEYPORT is the
             - instantaneous value of the PORT.
  58   5              }
  59   4              // run when unpress
  60   4              switch(KeyTemp2)
  61   4              {
  62   5                case ~(1<<Line1):     //S6°
  63   5                {
  64   6                  KeyValue=KEY1;
  65   6                
  66   6                }break;
  67   5                case ~(1<<Line2):     //S9°
  68   5                {
  69   6                  KeyValue=KEY4;
  70   6                
  71   6                }break;
  72   5                case ~(1<<Line3):     //S9°
  73   5                {
  74   6                  KeyValue=KEY7;
  75   6                
  76   6                }break; 
  77   5                case ~(1<<Line4):     //
  78   5                {
  79   6                  KeyValue=KEY_Star;
  80   6                
  81   6                }break;         
  82   5              }
  83   4            }   
  84   3            //COL1 COL2 COL3
  85   3            //1     0     1
  86   3            KEYPORT &=(~(1<<Column2)); 
  87   3            KEYPORT |= (1<<Column1)|(1<<Column3)|(1<<Column4);
  88   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));      //
  89   3            if(KeyTemp1!=0xff)      //
  90   3            {
  91   4              while(KeyTemp1!=0xff) //
  92   4              { 
  93   5                KeyTemp2=KeyTemp1;  
  94   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4))); //
  95   5              }
  96   4              switch(KeyTemp2)
  97   4              {
  98   5                case ~(1<<Line1):     //
  99   5                {
 100   6                  KeyValue=KEY2;
 101   6                
 102   6                }break;
 103   5                case ~(1<<Line2):     //
 104   5                {
 105   6                  KeyValue=KEY5;
 106   6                
 107   6                }break;
 108   5                case ~(1<<Line3):     //
 109   5                {
 110   6                  KeyValue=KEY8;
 111   6                
C51 COMPILER V9.52.0.0   KEYPAD                                                            03/22/2019 09:41:50 PAGE 3   

 112   6                }break;   
 113   5                case ~(1<<Line4):     //
 114   5                {
 115   6                  KeyValue=KEY0;
 116   6                
 117   6                }break;           
 118   5              }
 119   4            }
 120   3            //COL1 COL2 COL3
 121   3            //1     1     0
 122   3            KEYPORT &=(~(1<<Column3)); //1 1 0
 123   3            KEYPORT |= (1<<Column1)|(1<<Column2)|(1<<Column4);
 124   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));     //
 125   3            if(KeyTemp1!=0xff)      //
 126   3            {
 127   4              while(KeyTemp1!=0xff) // if pressed any key of COL3
 128   4              { 
 129   5                KeyTemp2=KeyTemp1;  
 130   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));//
 131   5              }
 132   4              switch(KeyTemp2)
 133   4              {
 134   5                case ~(1<<Line1):     //S8°
 135   5                {
 136   6                  KeyValue=KEY3;
 137   6                
 138   6                }break;
 139   5                case ~(1<<Line2):     //S11°
 140   5                {
 141   6                  KeyValue=KEY6;
 142   6                
 143   6                }break;
 144   5                case ~(1<<Line3):     //S11°
 145   5                {
 146   6                  KeyValue=KEY9;
 147   6                
 148   6                }break;   
 149   5                case ~(1<<Line4):     //
 150   5                {
 151   6                  KeyValue=KEY_SHARP;
 152   6                
 153   6                }break;         
 154   5              }
 155   4            } 
 156   3      
 157   3            //COL1 COL2 COL3 COL4
 158   3            //1     1     1   0
 159   3            KEYPORT &=(~(1<<Column4)); //1 1 1 0
 160   3            KEYPORT |= (1<<Column1)|(1<<Column2)|(1<<Column3);
 161   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));     //
 162   3            if(KeyTemp1!=0xff)      //
 163   3            {
 164   4              while(KeyTemp1!=0xff) // if pressed any key of COL3
 165   4              { 
 166   5                KeyTemp2=KeyTemp1;  
 167   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));//
 168   5              }
 169   4              switch(KeyTemp2)
 170   4              {
 171   5                case ~(1<<Line1):     //S8°
 172   5                {
 173   6                  KeyValue=KEY_A;
C51 COMPILER V9.52.0.0   KEYPAD                                                            03/22/2019 09:41:50 PAGE 4   

 174   6                
 175   6                }break;
 176   5                case ~(1<<Line2):     //S11°
 177   5                {
 178   6                  KeyValue=KEY_B;
 179   6                
 180   6                }break;
 181   5                case ~(1<<Line3):     //S11°
 182   5                {
 183   6                  KeyValue=KEY_C;
 184   6                
 185   6                }break;   
 186   5                case ~(1<<Line4):     //
 187   5                {
 188   6                  KeyValue=KEY_D;
 189   6                
 190   6                }break;         
 191   5              }
 192   4            } 
 193   3            
 194   3            return  KeyValue; 
 195   3          }             
 196   2          else
 197   2          {
 198   3            return Unpress;       
 199   3          }
 200   2        }
 201   1        else
 202   1        {
 203   2          return Unpress; 
 204   2        }     
 205   1      }
 206          void Key_Process(void)//
 207          {
 208   1        static int KeyCount=0;
 209   1        static unsigned char KeyNum_Old,KeyNum,PressedKey[5]="hhmms";
 210   1        int d,hours,mins,months,days;
 211   1        KeyNum_Old=KeyNum;
 212   1        KeyNum=Key_Scan();
 213   1        //if( (KeyNum=Key_Scan())!=0 )    //
 214   1        if (KeyNum==KEY_B )
 215   1        {
 216   2          small_move=1;
 217   2          return;
 218   2        } 
 219   1        if (KeyNum_Old==Unpress && KeyNum==KEY_C)
 220   1        {
 221   2          if(direction)
 222   2            direction=0;
 223   2          else 
 224   2            direction=1;
 225   2          return;
 226   2        }
 227   1        if (KeyNum==KEY_D && !move)
 228   1        {
 229   2          move =1;
 230   2          return;
 231   2        } 
 232   1        if (KeyNum==KEY_D && move)
 233   1        {
 234   2          move =0;
 235   2          return;
C51 COMPILER V9.52.0.0   KEYPAD                                                            03/22/2019 09:41:50 PAGE 5   

 236   2        }
 237   1        if (KeyNum_Old==Unpress && KeyNum==KEY_A )
 238   1        {
 239   2          if(auto_mode)
 240   2            auto_mode=0;
 241   2          else
 242   2            auto_mode=1;
 243   2          return;
 244   2        } 
 245   1      
 246   1        
 247   1      
 248   1        /*if (KeyNum_Old==Unpress && KeyNum==KEY_B)
 249   1        {
 250   1          small_move=0;
 251   1          return;
 252   1        }   */
 253   1        if(KeyNum_Old==Unpress && KeyNum!=Unpress)
 254   1        {
 255   2          PressedKey[KeyCount]=KeyNum;
 256   2          KeyCount++;
 257   2          if(KeyCount==5)
 258   2          {
 259   3            //PressedKey[]="";
 260   3            KeyCount=0;
 261   3            //=========================================================================     
 262   3            // Set Hour,Minute
 263   3            //=========================================================================
 264   3            hours=PressedKey[0]*10+PressedKey[1];
 265   3            mins=PressedKey[2]*10+PressedKey[3];
 266   3            if(PressedKey[4]==KEY_SHARP && hours<=24 && mins<=59)// set hour, minute
 267   3            { 
 268   4              SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Hours);//Write BCD value
 269   4              SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Minutes);//Write BCD value
 270   4            }
 271   3            if(PressedKey[4]==KEY1)// set hour, minute
 272   3            { 
 273   4              selected_motor=0;
 274   4            }
 275   3            else if(PressedKey[4]==KEY2)
 276   3            {
 277   4              selected_motor=1;
 278   4            }
 279   3            //=========================================================================     
 280   3            // Set Month,Day      
 281   3            //=========================================================================
 282   3            months=PressedKey[0]*10+PressedKey[1];
 283   3            days=PressedKey[2]*10+PressedKey[3];      
 284   3            if (PressedKey[4]==KEY_Star && months<=12 )//Set month and day
 285   3            {
 286   4              if(months<=7)//1..7
 287   4              {
 288   5                if(months%2)//month has 31 days,1 3 5 7 
 289   5                {
 290   6                  if(days<=31)
 291   6                  {
 292   7                    SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 293   7                    SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 294   7                  }
 295   6                }
 296   5                else //2 4 6 
 297   5                {
C51 COMPILER V9.52.0.0   KEYPAD                                                            03/22/2019 09:41:50 PAGE 6   

 298   6                  if (months==2)//February
 299   6                  {
 300   7                    if(days<=28)
 301   7                    {
 302   8                      SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 303   8                      SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 304   8                    }             
 305   7                    
 306   7                  }
 307   6                  else //4 6 
 308   6                  {
 309   7                    if(days<=30)
 310   7                    {
 311   8                      SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 312   8                      SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 313   8                    }                 
 314   7                    
 315   7                  }
 316   6                      
 317   6                }
 318   5              }
 319   4              else  //8..12
 320   4              {
 321   5                if(!(months%2))//month has 31 days,8 10 12
 322   5                {
 323   6                  if(days<=31)
 324   6                  {
 325   7                    SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 326   7                    SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 327   7                  }
 328   6                }
 329   5                else //9 11
 330   5                {
 331   6                    if(days<=30)
 332   6                    {
 333   7                      SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 334   7                      SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 335   7                    }                 
 336   6                }
 337   5              }
 338   4            }   
 339   3            LCD_clear();
 340   3            Command(0x08);
 341   3            Command(0x00);      
 342   3            WriteData(0x68);//display "h"
 343   3            WriteData(0x68);//display "h"
 344   3            WriteData(0x6D);//display "m"
 345   3            WriteData(0x6D);//display "m"
 346   3            WriteData(0x23);//display "#" SETTIME_KEY     
 347   3          }
 348   2          //LCD Display the pressed buttons
 349   2        for(d=0;d<KeyCount;d++)
 350   2        {
 351   3          if(KeyCount<=4)
 352   3          {
 353   4            Command(0x08);
 354   4            Command(0x00+d);
 355   4            WriteData(PressedKey[d]|0x30);
 356   4          }
 357   3        } 
 358   2      
 359   2        }
C51 COMPILER V9.52.0.0   KEYPAD                                                            03/22/2019 09:41:50 PAGE 7   

 360   1        
 361   1      
 362   1        
 363   1      }
 364          /***********************************************
 365          ************************************************/
 366          void KeyPad_IO_Init(void)
 367          { 
 368   1        P0M1 &=~( (1<<0)|(1<<1) | (1<<2) | (1<<3) | (1<<4) | (1<<5) | (1<<6) | (1<<7) );  
 369   1        P0M0 &=~( (1<<0)|(1<<1) | (1<<2) | (1<<3) | (1<<4) | (1<<5) | (1<<6) | (1<<7) );    
 370   1        P0M0=0x00;
 371   1        P0M1=0x00;
 372   1      }
 373          
 374          
 375          
 376          
 377          
 378          
 379          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1129    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      9       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
