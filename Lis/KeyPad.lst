C51 COMPILER V9.52.0.0   KEYPAD                                                            08/06/2018 14:58:10 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KEYPAD
OBJECT MODULE PLACED IN .\Obj\KeyPad.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Application\Source\KeyPad.c LARGE BROWSE INCDIR(.\Application\Header) DEBUG
                    - OBJECTEXTEND PRINT(.\Lis\KeyPad.lst) TABS(2) OBJECT(.\Obj\KeyPad.obj)

line level    source

   1          #include "stc15f2k60s2.h"
   2          #include "KeyPad.h"
   3          #include "PCF85063BTL.h"
   4          #include "LCD_Driver_SPLC780D.h"
   5          //#include "Receiver_Position_Data.h"
   6          
   7          void DisplayLCD(unsigned char BCD);
   8          void WriteData(unsigned char dat);
   9          
  10          void SPI_WriteTime(unsigned char val,unsigned char addr);
  11          void Command(unsigned char dat);
  12          void LCD_clear(void);
  13          bit move=0;
  14          bit small_move=0;
  15          bit direction=0;
  16          void Delay_ms(unsigned int ms)
  17          {
  18   1        unsigned int De_Cnt;
  19   1        while( (ms--) != 0)
  20   1        {
  21   2          for(De_Cnt = 0; De_Cnt < 600; De_Cnt++); 
  22   2        }             
  23   1      }
  24          unsigned char Key_Scan(void)
  25          {
  26   1        unsigned char KeyTemp1,KeyTemp2;
  27   1        unsigned char KeyValue;
  28   1      
  29   1        //
  30   1        KEYPORT &=(~((1<<Column1)|(1<<Column2)|(1<<Column3)|(1<<Column4))); // ~(00000010 | 00000100 | 00001000)=
             -1111*000*1: set three columns equal to Zero
  31   1        //
  32   1        //0010 0000
  33   1        KEYPORT |= (1<<Line1) | (1<<Line2) | (1<<Line3) | (1<<Line4) ;  //10000000 | 01000000 | 00100000=*111*000
             -00: Set three columns equal to 1
  34   1        //    
  35   1        KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));  //~(10000000 | 01000000 | 00100000)=
             -00011111
  36   1        if(KeyTemp1!=0xff)      //
  37   1        { 
  38   2          Delay_ms(10);         //
  39   2          KeyTemp1=KEYPORT | ( ~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)) );  //~(10000000 | 01000000 | 0010000
             -0)=00011111
  40   2          if(KeyTemp1!=0xff)      //
  41   2          {
  42   3            //COL1 COL2 COL3
  43   3            //0     1     1
  44   3            KEYPORT &=(~(1<<Column1)); //0 1 1 1
  45   3            KEYPORT |= (1<<Column2)|(1<<Column3)|(1<<Column4);//
  46   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));//  KEYPORT | 00011111
  47   3            if(KeyTemp1!=0xff)      //
  48   3            {
  49   4              while(KeyTemp1!=0xff) // if pressed any key on COL1
  50   4              { 
C51 COMPILER V9.52.0.0   KEYPAD                                                            08/06/2018 14:58:10 PAGE 2   

  51   5                KeyTemp2=KeyTemp1;  
  52   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));  // read the data, KEYPORT is the
             - instantaneous value of the PORT.
  53   5              }
  54   4              // run when unpress
  55   4              switch(KeyTemp2)
  56   4              {
  57   5                case ~(1<<Line1):     //S6°
  58   5                {
  59   6                  KeyValue=KEY1;
  60   6                
  61   6                }break;
  62   5                case ~(1<<Line2):     //S9°
  63   5                {
  64   6                  KeyValue=KEY4;
  65   6                
  66   6                }break;
  67   5                case ~(1<<Line3):     //S9°
  68   5                {
  69   6                  KeyValue=KEY7;
  70   6                
  71   6                }break; 
  72   5                case ~(1<<Line4):     //
  73   5                {
  74   6                  KeyValue=KEY_Star;
  75   6                
  76   6                }break;         
  77   5              }
  78   4            }   
  79   3            //COL1 COL2 COL3
  80   3            //1     0     1
  81   3            KEYPORT &=(~(1<<Column2)); 
  82   3            KEYPORT |= (1<<Column1)|(1<<Column3)|(1<<Column4);
  83   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));      //
  84   3            if(KeyTemp1!=0xff)      //
  85   3            {
  86   4              while(KeyTemp1!=0xff) //
  87   4              { 
  88   5                KeyTemp2=KeyTemp1;  
  89   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4))); //
  90   5              }
  91   4              switch(KeyTemp2)
  92   4              {
  93   5                case ~(1<<Line1):     //
  94   5                {
  95   6                  KeyValue=KEY2;
  96   6                
  97   6                }break;
  98   5                case ~(1<<Line2):     //
  99   5                {
 100   6                  KeyValue=KEY5;
 101   6                
 102   6                }break;
 103   5                case ~(1<<Line3):     //
 104   5                {
 105   6                  KeyValue=KEY8;
 106   6                
 107   6                }break;   
 108   5                case ~(1<<Line4):     //
 109   5                {
 110   6                  KeyValue=KEY0;
 111   6                
C51 COMPILER V9.52.0.0   KEYPAD                                                            08/06/2018 14:58:10 PAGE 3   

 112   6                }break;           
 113   5              }
 114   4            }
 115   3            //COL1 COL2 COL3
 116   3            //1     1     0
 117   3            KEYPORT &=(~(1<<Column3)); //1 1 0
 118   3            KEYPORT |= (1<<Column1)|(1<<Column2)|(1<<Column4);
 119   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));     //
 120   3            if(KeyTemp1!=0xff)      //
 121   3            {
 122   4              while(KeyTemp1!=0xff) // if pressed any key of COL3
 123   4              { 
 124   5                KeyTemp2=KeyTemp1;  
 125   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));//
 126   5              }
 127   4              switch(KeyTemp2)
 128   4              {
 129   5                case ~(1<<Line1):     //S8°
 130   5                {
 131   6                  KeyValue=KEY3;
 132   6                
 133   6                }break;
 134   5                case ~(1<<Line2):     //S11°
 135   5                {
 136   6                  KeyValue=KEY6;
 137   6                
 138   6                }break;
 139   5                case ~(1<<Line3):     //S11°
 140   5                {
 141   6                  KeyValue=KEY9;
 142   6                
 143   6                }break;   
 144   5                case ~(1<<Line4):     //
 145   5                {
 146   6                  KeyValue=KEY_SHARP;
 147   6                
 148   6                }break;         
 149   5              }
 150   4            } 
 151   3      
 152   3            //COL1 COL2 COL3 COL4
 153   3            //1     1     1   0
 154   3            KEYPORT &=(~(1<<Column4)); //1 1 1 0
 155   3            KEYPORT |= (1<<Column1)|(1<<Column2)|(1<<Column3);
 156   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));     //
 157   3            if(KeyTemp1!=0xff)      //
 158   3            {
 159   4              while(KeyTemp1!=0xff) // if pressed any key of COL3
 160   4              { 
 161   5                KeyTemp2=KeyTemp1;  
 162   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));//
 163   5              }
 164   4              switch(KeyTemp2)
 165   4              {
 166   5                case ~(1<<Line1):     //S8°
 167   5                {
 168   6                  KeyValue=KEY_A;
 169   6                
 170   6                }break;
 171   5                case ~(1<<Line2):     //S11°
 172   5                {
 173   6                  KeyValue=KEY_B;
C51 COMPILER V9.52.0.0   KEYPAD                                                            08/06/2018 14:58:10 PAGE 4   

 174   6                
 175   6                }break;
 176   5                case ~(1<<Line3):     //S11°
 177   5                {
 178   6                  KeyValue=KEY_C;
 179   6                
 180   6                }break;   
 181   5                case ~(1<<Line4):     //
 182   5                {
 183   6                  KeyValue=KEY_D;
 184   6                
 185   6                }break;         
 186   5              }
 187   4            } 
 188   3            
 189   3            return  KeyValue; 
 190   3          }             
 191   2          else
 192   2          {
 193   3            return Unpress;       
 194   3          }
 195   2        }
 196   1        else
 197   1        {
 198   2          return Unpress; 
 199   2        }     
 200   1      }
 201          void Key_Process(void)//
 202          {
 203   1        static int KeyCount=0;
 204   1        static unsigned char KeyNum_Old,KeyNum,PressedKey[5]="hhmms";
 205   1        int d,hours,mins,months,days;
 206   1        KeyNum_Old=KeyNum;
 207   1        KeyNum=Key_Scan();
 208   1        //if( (KeyNum=Key_Scan())!=0 )    //
 209   1        if (KeyNum_Old==Unpress && KeyNum==KEY_C)
 210   1        {
 211   2          if(direction)
 212   2            direction=0;
 213   2          else 
 214   2            direction=1;
 215   2          return;
 216   2        }
 217   1        if (KeyNum==KEY_D && !move)
 218   1        {
 219   2          move =1;
 220   2          return;
 221   2        } 
 222   1        if (KeyNum==KEY_D && move)
 223   1        {
 224   2          move =0;
 225   2          return;
 226   2        }
 227   1        
 228   1        if (KeyNum==KEY_B)
 229   1        {
 230   2          small_move =1;
 231   2          return;
 232   2        } 
 233   1        if(KeyNum_Old==Unpress && KeyNum!=Unpress)
 234   1        {
 235   2          PressedKey[KeyCount]=KeyNum;
C51 COMPILER V9.52.0.0   KEYPAD                                                            08/06/2018 14:58:10 PAGE 5   

 236   2          KeyCount++;
 237   2          if(KeyCount==5)
 238   2          {
 239   3            //PressedKey[]="";
 240   3            KeyCount=0;
 241   3            //=========================================================================     
 242   3            // Set Hour,Minute
 243   3            //=========================================================================
 244   3            hours=PressedKey[0]*10+PressedKey[1];
 245   3            mins=PressedKey[2]*10+PressedKey[3];
 246   3            if(PressedKey[4]==KEY_SHARP && hours<=24 && mins<=59)// set hour, minute
 247   3            { 
 248   4              SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Hours);//Write BCD value
 249   4              SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Minutes);//Write BCD value
 250   4            }
 251   3            //=========================================================================     
 252   3            // Set Month,Day      
 253   3            //=========================================================================
 254   3            months=PressedKey[0]*10+PressedKey[1];
 255   3            days=PressedKey[2]*10+PressedKey[3];      
 256   3            if (PressedKey[4]==KEY_Star && months<=12 )//Set month and day
 257   3            {
 258   4              if(months<=7)//1..7
 259   4              {
 260   5                if(months%2)//month has 31 days,1 3 5 7 
 261   5                {
 262   6                  if(days<=31)
 263   6                  {
 264   7                    SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 265   7                    SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 266   7                  }
 267   6                }
 268   5                else //2 4 6 
 269   5                {
 270   6                  if (months==2)//February
 271   6                  {
 272   7                    if(days<=28)
 273   7                    {
 274   8                      SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 275   8                      SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 276   8                    }             
 277   7                    
 278   7                  }
 279   6                  else //4 6 
 280   6                  {
 281   7                    if(days<=30)
 282   7                    {
 283   8                      SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 284   8                      SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 285   8                    }                 
 286   7                    
 287   7                  }
 288   6                      
 289   6                }
 290   5              }
 291   4              else  //8..12
 292   4              {
 293   5                if(!(months%2))//month has 31 days,8 10 12
 294   5                {
 295   6                  if(days<=31)
 296   6                  {
 297   7                    SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
C51 COMPILER V9.52.0.0   KEYPAD                                                            08/06/2018 14:58:10 PAGE 6   

 298   7                    SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 299   7                  }
 300   6                }
 301   5                else //9 11
 302   5                {
 303   6                    if(days<=30)
 304   6                    {
 305   7                      SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 306   7                      SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 307   7                    }                 
 308   6                }
 309   5              }
 310   4            }   
 311   3            LCD_clear();
 312   3            Command(0x08);
 313   3            Command(0x00);      
 314   3            WriteData(0x68);//display "h"
 315   3            WriteData(0x68);//display "h"
 316   3            WriteData(0x6D);//display "m"
 317   3            WriteData(0x6D);//display "m"
 318   3            WriteData(0x23);//display "#" SETTIME_KEY     
 319   3          }
 320   2          //LCD Display the pressed buttons
 321   2        for(d=0;d<KeyCount;d++)
 322   2        {
 323   3          if(KeyCount<=4)
 324   3          {
 325   4            Command(0x08);
 326   4            Command(0x00+d);
 327   4            WriteData(PressedKey[d]|0x30);
 328   4          }
 329   3        } 
 330   2      
 331   2        }
 332   1        
 333   1      
 334   1        
 335   1      }
 336          /***********************************************
 337          ************************************************/
 338          void KeyPad_IO_Init(void)
 339          { 
 340   1        P0M1 &=~( (1<<1) | (1<<2) | (1<<3) | (1<<4) | (1<<5) | (1<<6) | (1<<7) );  
 341   1        P0M0 &=~( (1<<1) | (1<<2) | (1<<3) | (1<<4) | (1<<5) | (1<<6) | (1<<7) );    
 342   1      }
 343          
 344          
 345          
 346          
 347          
 348          
 349          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1074    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      9       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
C51 COMPILER V9.52.0.0   KEYPAD                                                            08/06/2018 14:58:10 PAGE 7   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
