C51 COMPILER V9.52.0.0   KEYPAD                                                            04/02/2019 16:58:40 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KEYPAD
OBJECT MODULE PLACED IN .\Obj\KeyPad.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Application\Source\KeyPad.c LARGE BROWSE INCDIR(.\Application\Header) DEBUG
                    - OBJECTEXTEND PRINT(.\Lis\KeyPad.lst) TABS(2) OBJECT(.\Obj\KeyPad.obj)

line level    source

   1          #include "stc15f2k60s2.h"
   2          #include "KeyPad.h"
   3          #include "PCF85063BTL.h"
   4          #include "LCD_Driver_SPLC780D.h"
   5          //#include "Receiver_Position_Data.h"
   6          
   7          void DisplayLCD(unsigned char BCD);
   8          void WriteData(unsigned char dat);
   9          
  10          void SPI_WriteTime(unsigned char val,unsigned char addr);
  11          void Command(unsigned char dat);
  12          void LCD_clear(void);
  13          
  14          extern unsigned char KeyNum_Old,KeyNum,PressedKey[5]; //jk
  15          extern unsigned char mins, hours,days,months ; //jk
  16          //=============================================
  17          bit move=0;
  18          bit small_move=0;
  19          bit direction=0;
  20          bit auto_move=0;
  21          bit selected_motor=0;
  22          bit calib_mode=0;
  23          //bit auto_mode=0; //jk
  24          //=============================================
  25          void Delay_ms(unsigned int ms)
  26          {
  27   1        unsigned int De_Cnt;
  28   1        while( (ms--) != 0)
  29   1        {
  30   2          for(De_Cnt = 0; De_Cnt < 600; De_Cnt++); 
  31   2        }             
  32   1      }
  33          unsigned char Key_Scan(void)
  34          {
  35   1        unsigned char KeyTemp1,KeyTemp2;
  36   1        unsigned char KeyValue;
  37   1      
  38   1        //
  39   1        KEYPORT &=(~((1<<Column1)|(1<<Column2)|(1<<Column3)|(1<<Column4))); // ~(00000010 | 00000100 | 00001000)=
             -1111*000*1: set three columns equal to Zero
  40   1        //
  41   1        //0010 0000
  42   1        KEYPORT |= (1<<Line1) | (1<<Line2) | (1<<Line3) | (1<<Line4) ;  //10000000 | 01000000 | 00100000=*111*000
             -00: Set three columns equal to 1
  43   1        //    
  44   1        KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));  //~(10000000 | 01000000 | 00100000)=
             -00011111
  45   1        if(KeyTemp1!=0xff)      //
  46   1        { 
  47   2          //Delay_ms(10);         //
  48   2          KeyTemp1=KEYPORT | ( ~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)) );  //~(10000000 | 01000000 | 0010000
             -0)=00011111
  49   2          if(KeyTemp1!=0xff)      //
  50   2          {
C51 COMPILER V9.52.0.0   KEYPAD                                                            04/02/2019 16:58:40 PAGE 2   

  51   3            //COL1 COL2 COL3
  52   3            //0     1     1
  53   3            KEYPORT &=(~(1<<Column1)); //0 1 1 1
  54   3            KEYPORT |= (1<<Column2)|(1<<Column3)|(1<<Column4);//
  55   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));//  KEYPORT | 00011111
  56   3            if(KeyTemp1!=0xff)      //
  57   3            {
  58   4              while(KeyTemp1!=0xff) // if pressed any key on COL1
  59   4              { 
  60   5                KeyTemp2=KeyTemp1;  
  61   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));  // read the data, KEYPORT is the
             - instantaneous value of the PORT.
  62   5              }
  63   4              // run when unpress
  64   4              switch(KeyTemp2)
  65   4              {
  66   5                case ~(1<<Line1):     //S6°
  67   5                {
  68   6                  KeyValue=KEY1;
  69   6                
  70   6                }break;
  71   5                case ~(1<<Line2):     //S9°
  72   5                {
  73   6                  KeyValue=KEY4;
  74   6                
  75   6                }break;
  76   5                case ~(1<<Line3):     //S9°
  77   5                {
  78   6                  KeyValue=KEY7;
  79   6                
  80   6                }break; 
  81   5                case ~(1<<Line4):     //
  82   5                {
  83   6                  KeyValue=KEY_Star;
  84   6                
  85   6                }break;         
  86   5              }
  87   4            }   
  88   3            //COL1 COL2 COL3
  89   3            //1     0     1
  90   3            KEYPORT &=(~(1<<Column2)); 
  91   3            KEYPORT |= (1<<Column1)|(1<<Column3)|(1<<Column4);
  92   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));      //
  93   3            if(KeyTemp1!=0xff)      //
  94   3            {
  95   4              while(KeyTemp1!=0xff) //
  96   4              { 
  97   5                KeyTemp2=KeyTemp1;  
  98   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4))); //
  99   5              }
 100   4              switch(KeyTemp2)
 101   4              {
 102   5                case ~(1<<Line1):     //
 103   5                {
 104   6                  KeyValue=KEY2;
 105   6                
 106   6                }break;
 107   5                case ~(1<<Line2):     //
 108   5                {
 109   6                  KeyValue=KEY5;
 110   6                
 111   6                }break;
C51 COMPILER V9.52.0.0   KEYPAD                                                            04/02/2019 16:58:40 PAGE 3   

 112   5                case ~(1<<Line3):     //
 113   5                {
 114   6                  KeyValue=KEY8;
 115   6                
 116   6                }break;   
 117   5                case ~(1<<Line4):     //
 118   5                {
 119   6                  KeyValue=KEY0;
 120   6                
 121   6                }break;           
 122   5              }
 123   4            }
 124   3            //COL1 COL2 COL3
 125   3            //1     1     0
 126   3            KEYPORT &=(~(1<<Column3)); //1 1 0
 127   3            KEYPORT |= (1<<Column1)|(1<<Column2)|(1<<Column4);
 128   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));     //
 129   3            if(KeyTemp1!=0xff)      //
 130   3            {
 131   4              while(KeyTemp1!=0xff) // if pressed any key of COL3
 132   4              { 
 133   5                KeyTemp2=KeyTemp1;  
 134   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));//
 135   5              }
 136   4              switch(KeyTemp2)
 137   4              {
 138   5                case ~(1<<Line1):     //S8°
 139   5                {
 140   6                  KeyValue=KEY3;
 141   6                
 142   6                }break;
 143   5                case ~(1<<Line2):     //S11°
 144   5                {
 145   6                  KeyValue=KEY6;
 146   6                
 147   6                }break;
 148   5                case ~(1<<Line3):     //S11°
 149   5                {
 150   6                  KeyValue=KEY9;
 151   6                
 152   6                }break;   
 153   5                case ~(1<<Line4):     //
 154   5                {
 155   6                  KeyValue=KEY_SHARP;
 156   6                
 157   6                }break;         
 158   5              }
 159   4            } 
 160   3      
 161   3            //COL1 COL2 COL3 COL4
 162   3            //1     1     1   0
 163   3            KEYPORT &=(~(1<<Column4)); //1 1 1 0
 164   3            KEYPORT |= (1<<Column1)|(1<<Column2)|(1<<Column3);
 165   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));     //
 166   3            if(KeyTemp1!=0xff)      //
 167   3            {
 168   4              while(KeyTemp1!=0xff) // if pressed any key of COL3
 169   4              { 
 170   5                KeyTemp2=KeyTemp1;  
 171   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));//
 172   5              }
 173   4              switch(KeyTemp2)
C51 COMPILER V9.52.0.0   KEYPAD                                                            04/02/2019 16:58:40 PAGE 4   

 174   4              {
 175   5                case ~(1<<Line1):     //S8°
 176   5                {
 177   6                  KeyValue=KEY_A;
 178   6                
 179   6                }break;
 180   5                case ~(1<<Line2):     //S11°
 181   5                {
 182   6                  KeyValue=KEY_B;
 183   6                
 184   6                }break;
 185   5                case ~(1<<Line3):     //S11°
 186   5                {
 187   6                  KeyValue=KEY_C;
 188   6                
 189   6                }break;   
 190   5                case ~(1<<Line4):     //
 191   5                {
 192   6                  KeyValue=KEY_D;
 193   6                
 194   6                }break;         
 195   5              }
 196   4            } 
 197   3            
 198   3            return  KeyValue; 
 199   3          }             
 200   2          else
 201   2          {
 202   3            return Unpress;       
 203   3          }
 204   2        }
 205   1        else
 206   1        {
 207   2          return Unpress; 
 208   2        }     
 209   1      }
 210          void Key_Process(void)//
 211          {
 212   1        static int KeyCount=0;
 213   1      //  static unsigned char KeyNum_Old,KeyNum,PressedKey[5]="hhmms"; //jk
 214   1      //  int d,hours,mins,months,days;  //jk
 215   1        int d;                           //jk
 216   1        KeyNum_Old=KeyNum;
 217   1        KeyNum=Key_Scan();  
 218   1        //if( (KeyNum=Key_Scan())!=0 )    //
 219   1        if (KeyNum==KEY_B )
 220   1        {
 221   2          small_move=1;
 222   2          return;
 223   2        } 
 224   1        if (KeyNum_Old==Unpress && KeyNum==KEY_C)
 225   1        {
 226   2          if(direction)
 227   2            direction=0;
 228   2          else 
 229   2            direction=1;
 230   2          return;
 231   2        }
 232   1        if (KeyNum==KEY_D && !move)
 233   1        {
 234   2          move =1;
 235   2          return;
C51 COMPILER V9.52.0.0   KEYPAD                                                            04/02/2019 16:58:40 PAGE 5   

 236   2        } 
 237   1        if (KeyNum==KEY_D && move)
 238   1        {
 239   2          move =0;
 240   2          return;
 241   2        }
 242   1        if (KeyNum_Old==Unpress && KeyNum==KEY_A )
 243   1        {
 244   2          if(auto_mode)
 245   2            auto_mode=0;
 246   2          else
 247   2            auto_mode=1;
 248   2          return;
 249   2        } 
 250   1      
 251   1        
 252   1      
 253   1        /*if (KeyNum_Old==Unpress && KeyNum==KEY_B)
 254   1        {
 255   1          small_move=0;
 256   1          return;
 257   1        }   */
 258   1        if(KeyNum_Old==Unpress && KeyNum!=Unpress)
 259   1        {
 260   2          PressedKey[KeyCount]=KeyNum;
 261   2          KeyCount++;
 262   2          if(KeyCount==5)
 263   2          {
 264   3            //PressedKey[]="";
 265   3            KeyCount=0;
 266   3            //=========================================================================     
 267   3            // Set Hour,Minute
 268   3            //=========================================================================
 269   3            hours=PressedKey[0]*10+PressedKey[1];
 270   3            mins=PressedKey[2]*10+PressedKey[3];
 271   3            if(PressedKey[4]==KEY_SHARP && hours<=24 && mins<=59)// set hour, minute
 272   3            { 
 273   4              SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Hours);//Write BCD value
 274   4              SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Minutes);//Write BCD value
 275   4            }
 276   3            if(PressedKey[4]==KEY1)// set hour, minute
 277   3            { 
 278   4              selected_motor=0;
 279   4            }
 280   3            else if(PressedKey[4]==KEY2)
 281   3            {
 282   4              selected_motor=1;
 283   4            }
 284   3            //=========================================================================     
 285   3            // Set Month,Day      
 286   3            //=========================================================================
 287   3            months=PressedKey[0]*10+PressedKey[1];
 288   3            days=PressedKey[2]*10+PressedKey[3];      
 289   3            if (PressedKey[4]==KEY_Star && months<=12 )//Set month and day
 290   3            {
 291   4              if(months<=7)//1..7
 292   4              {
 293   5                if(months%2)//month has 31 days,1 3 5 7 
 294   5                {
 295   6                  if(days<=31)
 296   6                  {
 297   7                    SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
C51 COMPILER V9.52.0.0   KEYPAD                                                            04/02/2019 16:58:40 PAGE 6   

 298   7                    SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 299   7                  }
 300   6                }
 301   5                else //2 4 6 
 302   5                {
 303   6                  if (months==2)//February
 304   6                  {
 305   7                    if(days<=28)
 306   7                    {
 307   8                      SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 308   8                      SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 309   8                    }             
 310   7                    
 311   7                  }
 312   6                  else //4 6 
 313   6                  {
 314   7                    if(days<=30)
 315   7                    {
 316   8                      SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 317   8                      SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 318   8                    }                 
 319   7                    
 320   7                  }
 321   6                      
 322   6                }
 323   5              }
 324   4              else  //8..12
 325   4              {
 326   5                if(!(months%2))//month has 31 days,8 10 12
 327   5                {
 328   6                  if(days<=31)
 329   6                  {
 330   7                    SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 331   7                    SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 332   7                  }
 333   6                }
 334   5                else //9 11
 335   5                {
 336   6                    if(days<=30)
 337   6                    {
 338   7                      SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 339   7                      SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 340   7                    }                 
 341   6                }
 342   5              }
 343   4            }   
 344   3            LCD_clear();
 345   3            Command(0x08);
 346   3            Command(0x00);      
 347   3            WriteData(0x68);//display "h"
 348   3            WriteData(0x68);//display "h"
 349   3            WriteData(0x6D);//display "m"
 350   3            WriteData(0x6D);//display "m"
 351   3            WriteData(0x23);//display "#" SETTIME_KEY     
 352   3          }
 353   2          //LCD Display the pressed buttons
 354   2        for(d=0;d<KeyCount;d++)
 355   2        {
 356   3          if(KeyCount<=4)
 357   3          {
 358   4            Command(0x08);
 359   4            Command(0x00+d);
C51 COMPILER V9.52.0.0   KEYPAD                                                            04/02/2019 16:58:40 PAGE 7   

 360   4            WriteData(PressedKey[d]|0x30);
 361   4          }
 362   3        } 
 363   2      
 364   2        }
 365   1        
 366   1      
 367   1        
 368   1      }
 369          /***********************************************
 370          ************************************************/
 371          void KeyPad_IO_Init(void)
 372          { 
 373   1        P0M1 &=~( (1<<0)|(1<<1) | (1<<2) | (1<<3) | (1<<4) | (1<<5) | (1<<6) | (1<<7) );  
 374   1        P0M0 &=~( (1<<0)|(1<<1) | (1<<2) | (1<<3) | (1<<4) | (1<<5) | (1<<6) | (1<<7) );    
 375   1        P0M0=0x00;
 376   1        P0M1=0x00;
 377   1      }
 378          
 379          
 380          
 381          
 382          
 383          
 384          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1025    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
