C51 COMPILER V9.52.0.0   KEYPAD                                                            03/26/2019 14:19:01 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KEYPAD
OBJECT MODULE PLACED IN .\Obj\KeyPad.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Application\Source\KeyPad.c LARGE BROWSE INCDIR(.\Application\Header) DEBUG
                    - OBJECTEXTEND PRINT(.\Lis\KeyPad.lst) TABS(2) OBJECT(.\Obj\KeyPad.obj)

line level    source

   1          #include "stc15f2k60s2.h"
   2          #include "KeyPad.h"
   3          #include "PCF85063BTL.h"
   4          #include "LCD_Driver_SPLC780D.h"
   5          //#include "Receiver_Position_Data.h"
   6          
   7          void DisplayLCD(unsigned char BCD);
   8          void WriteData(unsigned char dat);
   9          
  10          void SPI_WriteTime(unsigned char val,unsigned char addr);
  11          void Command(unsigned char dat);
  12          void LCD_clear(void);
  13          //=============================================
  14          bit move=0;
  15          bit small_move=0;
  16          bit direction=0;
  17          bit auto_move=0;
  18          bit selected_motor=0;
  19          bit calib_mode=0;
  20          //bit auto_mode=0; //jk
  21          //=============================================
  22          void Delay_ms(unsigned int ms)
  23          {
  24   1        unsigned int De_Cnt;
  25   1        while( (ms--) != 0)
  26   1        {
  27   2          for(De_Cnt = 0; De_Cnt < 600; De_Cnt++); 
  28   2        }             
  29   1      }
  30          unsigned char Key_Scan(void)
  31          {
  32   1        unsigned char KeyTemp1,KeyTemp2;
  33   1        unsigned char KeyValue;
  34   1      
  35   1        //
  36   1        KEYPORT &=(~((1<<Column1)|(1<<Column2)|(1<<Column3)|(1<<Column4))); // ~(00000010 | 00000100 | 00001000)=
             -1111*000*1: set three columns equal to Zero
  37   1        //
  38   1        //0010 0000
  39   1        KEYPORT |= (1<<Line1) | (1<<Line2) | (1<<Line3) | (1<<Line4) ;  //10000000 | 01000000 | 00100000=*111*000
             -00: Set three columns equal to 1
  40   1        //    
  41   1        KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));  //~(10000000 | 01000000 | 00100000)=
             -00011111
  42   1        if(KeyTemp1!=0xff)      //
  43   1        { 
  44   2          //Delay_ms(10);         //
  45   2          KeyTemp1=KEYPORT | ( ~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)) );  //~(10000000 | 01000000 | 0010000
             -0)=00011111
  46   2          if(KeyTemp1!=0xff)      //
  47   2          {
  48   3            //COL1 COL2 COL3
  49   3            //0     1     1
  50   3            KEYPORT &=(~(1<<Column1)); //0 1 1 1
C51 COMPILER V9.52.0.0   KEYPAD                                                            03/26/2019 14:19:01 PAGE 2   

  51   3            KEYPORT |= (1<<Column2)|(1<<Column3)|(1<<Column4);//
  52   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));//  KEYPORT | 00011111
  53   3            if(KeyTemp1!=0xff)      //
  54   3            {
  55   4              while(KeyTemp1!=0xff) // if pressed any key on COL1
  56   4              { 
  57   5                KeyTemp2=KeyTemp1;  
  58   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));  // read the data, KEYPORT is the
             - instantaneous value of the PORT.
  59   5              }
  60   4              // run when unpress
  61   4              switch(KeyTemp2)
  62   4              {
  63   5                case ~(1<<Line1):     //S6°
  64   5                {
  65   6                  KeyValue=KEY1;
  66   6                
  67   6                }break;
  68   5                case ~(1<<Line2):     //S9°
  69   5                {
  70   6                  KeyValue=KEY4;
  71   6                
  72   6                }break;
  73   5                case ~(1<<Line3):     //S9°
  74   5                {
  75   6                  KeyValue=KEY7;
  76   6                
  77   6                }break; 
  78   5                case ~(1<<Line4):     //
  79   5                {
  80   6                  KeyValue=KEY_Star;
  81   6                
  82   6                }break;         
  83   5              }
  84   4            }   
  85   3            //COL1 COL2 COL3
  86   3            //1     0     1
  87   3            KEYPORT &=(~(1<<Column2)); 
  88   3            KEYPORT |= (1<<Column1)|(1<<Column3)|(1<<Column4);
  89   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));      //
  90   3            if(KeyTemp1!=0xff)      //
  91   3            {
  92   4              while(KeyTemp1!=0xff) //
  93   4              { 
  94   5                KeyTemp2=KeyTemp1;  
  95   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4))); //
  96   5              }
  97   4              switch(KeyTemp2)
  98   4              {
  99   5                case ~(1<<Line1):     //
 100   5                {
 101   6                  KeyValue=KEY2;
 102   6                
 103   6                }break;
 104   5                case ~(1<<Line2):     //
 105   5                {
 106   6                  KeyValue=KEY5;
 107   6                
 108   6                }break;
 109   5                case ~(1<<Line3):     //
 110   5                {
 111   6                  KeyValue=KEY8;
C51 COMPILER V9.52.0.0   KEYPAD                                                            03/26/2019 14:19:01 PAGE 3   

 112   6                
 113   6                }break;   
 114   5                case ~(1<<Line4):     //
 115   5                {
 116   6                  KeyValue=KEY0;
 117   6                
 118   6                }break;           
 119   5              }
 120   4            }
 121   3            //COL1 COL2 COL3
 122   3            //1     1     0
 123   3            KEYPORT &=(~(1<<Column3)); //1 1 0
 124   3            KEYPORT |= (1<<Column1)|(1<<Column2)|(1<<Column4);
 125   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));     //
 126   3            if(KeyTemp1!=0xff)      //
 127   3            {
 128   4              while(KeyTemp1!=0xff) // if pressed any key of COL3
 129   4              { 
 130   5                KeyTemp2=KeyTemp1;  
 131   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));//
 132   5              }
 133   4              switch(KeyTemp2)
 134   4              {
 135   5                case ~(1<<Line1):     //S8°
 136   5                {
 137   6                  KeyValue=KEY3;
 138   6                
 139   6                }break;
 140   5                case ~(1<<Line2):     //S11°
 141   5                {
 142   6                  KeyValue=KEY6;
 143   6                
 144   6                }break;
 145   5                case ~(1<<Line3):     //S11°
 146   5                {
 147   6                  KeyValue=KEY9;
 148   6                
 149   6                }break;   
 150   5                case ~(1<<Line4):     //
 151   5                {
 152   6                  KeyValue=KEY_SHARP;
 153   6                
 154   6                }break;         
 155   5              }
 156   4            } 
 157   3      
 158   3            //COL1 COL2 COL3 COL4
 159   3            //1     1     1   0
 160   3            KEYPORT &=(~(1<<Column4)); //1 1 1 0
 161   3            KEYPORT |= (1<<Column1)|(1<<Column2)|(1<<Column3);
 162   3            KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));     //
 163   3            if(KeyTemp1!=0xff)      //
 164   3            {
 165   4              while(KeyTemp1!=0xff) // if pressed any key of COL3
 166   4              { 
 167   5                KeyTemp2=KeyTemp1;  
 168   5                KeyTemp1=KEYPORT | (~((1<<Line1)|(1<<Line2)|(1<<Line3)|(1<<Line4)));//
 169   5              }
 170   4              switch(KeyTemp2)
 171   4              {
 172   5                case ~(1<<Line1):     //S8°
 173   5                {
C51 COMPILER V9.52.0.0   KEYPAD                                                            03/26/2019 14:19:01 PAGE 4   

 174   6                  KeyValue=KEY_A;
 175   6                
 176   6                }break;
 177   5                case ~(1<<Line2):     //S11°
 178   5                {
 179   6                  KeyValue=KEY_B;
 180   6                
 181   6                }break;
 182   5                case ~(1<<Line3):     //S11°
 183   5                {
 184   6                  KeyValue=KEY_C;
 185   6                
 186   6                }break;   
 187   5                case ~(1<<Line4):     //
 188   5                {
 189   6                  KeyValue=KEY_D;
 190   6                
 191   6                }break;         
 192   5              }
 193   4            } 
 194   3            
 195   3            return  KeyValue; 
 196   3          }             
 197   2          else
 198   2          {
 199   3            return Unpress;       
 200   3          }
 201   2        }
 202   1        else
 203   1        {
 204   2          return Unpress; 
 205   2        }     
 206   1      }
 207          void Key_Process(void)//
 208          {
 209   1        static int KeyCount=0;
 210   1        static unsigned char KeyNum_Old,KeyNum,PressedKey[5]="hhmms";
 211   1        int d,hours,mins,months,days;
 212   1        KeyNum_Old=KeyNum;
 213   1        KeyNum=Key_Scan();
 214   1        //if( (KeyNum=Key_Scan())!=0 )    //
 215   1        if (KeyNum==KEY_B )
 216   1        {
 217   2          small_move=1;
 218   2          return;
 219   2        } 
 220   1        if (KeyNum_Old==Unpress && KeyNum==KEY_C)
 221   1        {
 222   2          if(direction)
 223   2            direction=0;
 224   2          else 
 225   2            direction=1;
 226   2          return;
 227   2        }
 228   1        if (KeyNum==KEY_D && !move)
 229   1        {
 230   2          move =1;
 231   2          return;
 232   2        } 
 233   1        if (KeyNum==KEY_D && move)
 234   1        {
 235   2          move =0;
C51 COMPILER V9.52.0.0   KEYPAD                                                            03/26/2019 14:19:01 PAGE 5   

 236   2          return;
 237   2        }
 238   1        if (KeyNum_Old==Unpress && KeyNum==KEY_A )
 239   1        {
 240   2          if(auto_mode)
 241   2            auto_mode=0;
 242   2          else
 243   2            auto_mode=1;
 244   2          return;
 245   2        } 
 246   1      
 247   1        
 248   1      
 249   1        /*if (KeyNum_Old==Unpress && KeyNum==KEY_B)
 250   1        {
 251   1          small_move=0;
 252   1          return;
 253   1        }   */
 254   1        if(KeyNum_Old==Unpress && KeyNum!=Unpress)
 255   1        {
 256   2          PressedKey[KeyCount]=KeyNum;
 257   2          KeyCount++;
 258   2          if(KeyCount==5)
 259   2          {
 260   3            //PressedKey[]="";
 261   3            KeyCount=0;
 262   3            //=========================================================================     
 263   3            // Set Hour,Minute
 264   3            //=========================================================================
 265   3            hours=PressedKey[0]*10+PressedKey[1];
 266   3            mins=PressedKey[2]*10+PressedKey[3];
 267   3            if(PressedKey[4]==KEY_SHARP && hours<=24 && mins<=59)// set hour, minute
 268   3            { 
 269   4              SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Hours);//Write BCD value
 270   4              SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Minutes);//Write BCD value
 271   4            }
 272   3            if(PressedKey[4]==KEY1)// set hour, minute
 273   3            { 
 274   4              selected_motor=0;
 275   4            }
 276   3            else if(PressedKey[4]==KEY2)
 277   3            {
 278   4              selected_motor=1;
 279   4            }
 280   3            //=========================================================================     
 281   3            // Set Month,Day      
 282   3            //=========================================================================
 283   3            months=PressedKey[0]*10+PressedKey[1];
 284   3            days=PressedKey[2]*10+PressedKey[3];      
 285   3            if (PressedKey[4]==KEY_Star && months<=12 )//Set month and day
 286   3            {
 287   4              if(months<=7)//1..7
 288   4              {
 289   5                if(months%2)//month has 31 days,1 3 5 7 
 290   5                {
 291   6                  if(days<=31)
 292   6                  {
 293   7                    SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 294   7                    SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 295   7                  }
 296   6                }
 297   5                else //2 4 6 
C51 COMPILER V9.52.0.0   KEYPAD                                                            03/26/2019 14:19:01 PAGE 6   

 298   5                {
 299   6                  if (months==2)//February
 300   6                  {
 301   7                    if(days<=28)
 302   7                    {
 303   8                      SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 304   8                      SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 305   8                    }             
 306   7                    
 307   7                  }
 308   6                  else //4 6 
 309   6                  {
 310   7                    if(days<=30)
 311   7                    {
 312   8                      SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 313   8                      SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 314   8                    }                 
 315   7                    
 316   7                  }
 317   6                      
 318   6                }
 319   5              }
 320   4              else  //8..12
 321   4              {
 322   5                if(!(months%2))//month has 31 days,8 10 12
 323   5                {
 324   6                  if(days<=31)
 325   6                  {
 326   7                    SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 327   7                    SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 328   7                  }
 329   6                }
 330   5                else //9 11
 331   5                {
 332   6                    if(days<=30)
 333   6                    {
 334   7                      SPI_WriteTime((PressedKey[0]<<4)|PressedKey[1],Months);//Write BCD value
 335   7                      SPI_WriteTime((PressedKey[2]<<4)|PressedKey[3],Days);//Write BCD value              
 336   7                    }                 
 337   6                }
 338   5              }
 339   4            }   
 340   3            LCD_clear();
 341   3            Command(0x08);
 342   3            Command(0x00);      
 343   3            WriteData(0x68);//display "h"
 344   3            WriteData(0x68);//display "h"
 345   3            WriteData(0x6D);//display "m"
 346   3            WriteData(0x6D);//display "m"
 347   3            WriteData(0x23);//display "#" SETTIME_KEY     
 348   3          }
 349   2          //LCD Display the pressed buttons
 350   2        for(d=0;d<KeyCount;d++)
 351   2        {
 352   3          if(KeyCount<=4)
 353   3          {
 354   4            Command(0x08);
 355   4            Command(0x00+d);
 356   4            WriteData(PressedKey[d]|0x30);
 357   4          }
 358   3        } 
 359   2      
C51 COMPILER V9.52.0.0   KEYPAD                                                            03/26/2019 14:19:01 PAGE 7   

 360   2        }
 361   1        
 362   1      
 363   1        
 364   1      }
 365          /***********************************************
 366          ************************************************/
 367          void KeyPad_IO_Init(void)
 368          { 
 369   1        P0M1 &=~( (1<<0)|(1<<1) | (1<<2) | (1<<3) | (1<<4) | (1<<5) | (1<<6) | (1<<7) );  
 370   1        P0M0 &=~( (1<<0)|(1<<1) | (1<<2) | (1<<3) | (1<<4) | (1<<5) | (1<<6) | (1<<7) );    
 371   1        P0M0=0x00;
 372   1        P0M1=0x00;
 373   1      }
 374          
 375          
 376          
 377          
 378          
 379          
 380          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1129    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      9       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
