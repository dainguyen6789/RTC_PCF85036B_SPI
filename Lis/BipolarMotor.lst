<<<<<<< HEAD
C51 COMPILER V9.52.0.0   BIPOLARMOTOR                                                      08/06/2018 14:58:11 PAGE 1   
=======
C51 COMPILER V9.52.0.0   BIPOLARMOTOR                                                      08/07/2018 15:51:12 PAGE 1   
>>>>>>> 7a5f3df6684a2c9f1d307030c61e4f15880c2ed6


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE BIPOLARMOTOR
OBJECT MODULE PLACED IN .\Obj\BipolarMotor.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE BipolarMotor.c LARGE BROWSE INCDIR(.\Application\Header) DEBUG OBJECTEXTEND
                    - PRINT(.\Lis\BipolarMotor.lst) TABS(2) OBJECT(.\Obj\BipolarMotor.obj)

line level    source

   1          #include "stc15f2k60s2.h"
   2          #include "LCD_Driver_SPLC780D.h"
   3          #include "Receiver_Position_Data.h"
   4          #include "math.h"
   5          //#include "PCF85963BTL.h"
   6          void Delay_ms(unsigned int ms);
   7          int Day_Of_Year(unsigned char months,unsigned char days);
   8          unsigned char BCDtoDec1(char bcd);
   9          float trend_line_30_31(float time);
  10          float degree;
  11          
  12          unsigned char BCDtoDec1(unsigned char bcd)
  13          {
  14   1        unsigned char hi,lo;
  15   1        hi=bcd>>4;
  16   1        lo=bcd&0x0F;
  17   1        return hi*10+lo;
  18   1      }
  19          
  20          
  21          
  22          
  23          
  24          void Step_move(unsigned int step, bit dir)
  25          {
  26   1            unsigned int i=0;
  27   1            if(dir)
  28   1              P4 |=(1<<2);// set bit P4.2
  29   1            else
  30   1              P4 &=~(1<<2);// clear bit P4.2
  31   1            
  32   1            for( i=0;i<step;i++)
  33   1            {
  34   2                P4 |=1<<1;// P41=1 // moving distance (mm)=pi^2*step*4/675
  35   2                Wait_ms(2);
  36   2                P4 &= ~(1<<1);
  37   2                Wait_ms(2);
  38   2            }
  39   1      }
  40          
  41          void Move(float distance, bit direction)
  42          {
  43   1          unsigned int step;
  44   1          step= (unsigned int)(distance*337.5/(3.14159));
  45   1          Step_move(step,direction);
  46   1      }
  47          
  48          
  49          
  50          
  51          void Update_position(unsigned char mnths,unsigned char dys,unsigned char hurs,unsigned char mns,unsigned c
             -har sconds,float *currnt_pos)
  52          {
  53   1        unsigned int date,i;
<<<<<<< HEAD
C51 COMPILER V9.52.0.0   BIPOLARMOTOR                                                      08/06/2018 14:58:11 PAGE 2   
=======
C51 COMPILER V9.52.0.0   BIPOLARMOTOR                                                      08/07/2018 15:51:12 PAGE 2   
>>>>>>> 7a5f3df6684a2c9f1d307030c61e4f15880c2ed6

  54   1        float desired_distance,distance=0,h_float,m_float;
  55   1        
  56   1        /*hurs=0x12;
  57   1        mns=0x30;*/
  58   1        //sconds=0x15;
  59   1        desired_distance=*currnt_pos;
  60   1        date=Day_Of_Year(mnths,dys);
  61   1        //date=80;
  62   1        for(i=0;i<num_of_time_stamp;i++)// 13 diff values of time stamp
  63   1        {
  64   2          if ((i+1)<num_of_time_stamp && ((BCDtoDec1(hurs)*60+BCDtoDec1(mns))<=(Time_stamp_PM[i+1][0]*60+Time_stam
             -p_PM[i+1][1])) && ((BCDtoDec1(hurs)*60+BCDtoDec1(mns))>=(Time_stamp_PM[i][0]*60+Time_stamp_PM[i][1])) && BCDtoDec1(mns)%
             -1==0)// update every 2 mins
  65   2          {
  66   3            //switch(date)
  67   3            {
  68   4              if (date==218)//06Aout2018
<<<<<<< HEAD
  69   4              {
  70   5                h_float=(float)(BCDtoDec1(hurs));
  71   5                m_float=(float)(BCDtoDec1(mns));
  72   5                //t=(float)(BCDtoDec1(hurs))+(float)(BCDtoDec1(mns))/60;
  73   5                desired_distance=trend_line_30_31(h_float+m_float/60);
  74   5              }
  75   4            }
  76   3            distance=desired_distance-*currnt_pos;
  77   3            *currnt_pos=desired_distance;// change to sync with step movement
  78   3            if(distance>0)
  79   3            {
  80   4              Move(distance,1);// counter clock wise
  81   4            }
  82   3            else if(distance<0)
  83   3            {
  84   4              Move(-distance,0);// clock wise
  85   4            }
  86   3            else
  87   3            {
  88   4            } 
  89   3            
  90   3            break;
  91   3            
  92   3          }
  93   2          
  94   2        }
  95   1      }
*** WARNING C280 IN LINE 51 OF BipolarMotor.c: 'sconds': unreferenced local variable
  96          
  97          float trend_line_30_31(float time)
  98          {
  99   1        return (-4.88*time*time+126.08*time-745.26+(1.1*6.5));//for 6Aout2018
 100   1      }
 101          //
 102          /*
 103            for(i=0;i<13;i++)
 104            {
 105              if (BCDtoDec1(hurs)<=Time_stamp_PM[i+1][0] && BCDtoDec1(hurs)>=Time_stamp_PM[i][0] && BCDtoDec1(mns)>= T
             -ime_stamp_PM[i][1] && BCDtoDec1(mns)<= Time_stamp_PM[i+1][1] && BCDtoDec1(mns)%5==0)
 106              {
 107                desired_distance=(receiver_pos[i+1][0]-receiver_pos[i][0])/(Time_stamp_PM[i+1][0]*60+Time_stamp_PM[i+1]
             -[1]-Time_stamp_PM[i][0]*60-Time_stamp_PM[i][1])*(BCDtoDec1(hurs)*60+BCDtoDec1(mns)-Time_stamp_PM[i][0]*60-Time_stamp_PM[
             -i][1])+receiver_pos[i][0];
 108              }
 109            }
C51 COMPILER V9.52.0.0   BIPOLARMOTOR                                                      08/06/2018 14:58:11 PAGE 3   
=======
  69   4              //if (date==221)//09Aout2018
  70   4              //if (date==222)//10Aout2018  
  71   4              {
  72   5                h_float=(float)(BCDtoDec1(hurs));
  73   5                m_float=(float)(BCDtoDec1(mns));
  74   5                //t=(float)(BCDtoDec1(hurs))+(float)(BCDtoDec1(mns))/60;
  75   5                desired_distance=trend_line_30_31(h_float+m_float/60);
  76   5              }
  77   4            }
  78   3            distance=desired_distance-*currnt_pos;
  79   3            *currnt_pos=desired_distance;// change to sync with step movement
  80   3            if(distance>0)
  81   3            {
  82   4              Move(distance,1);// counter clock wise
  83   4            }
  84   3            else if(distance<0)
  85   3            {
  86   4              Move(-distance,0);// clock wise
  87   4            }
  88   3            else
  89   3            {
  90   4            } 
  91   3            
  92   3            break;
  93   3            
  94   3          }
  95   2          
  96   2        }
  97   1      }
*** WARNING C280 IN LINE 51 OF BipolarMotor.c: 'sconds': unreferenced local variable
  98          
  99          float trend_line_30_31(float time)
 100          {
 101   1        float offset;
 102   1        offset=1.099555E-04*pow(time,6) - 8.576526E-03*pow(time,5) + 2.755625E-01*pow(time,4) - 4.666361E+00*pow(
             -time,3) + 4.385879E+01*pow(time,2) - 2.163094E+02*time + 4.336795E+02;
 103   1        return (-4.88*time*time+126.08*time-745.26+((-offset-0.42)*6.5));//for 6Aout2018
 104   1        //return (-4.88*time*time+126.08*time-745.26+(1.1*10.5));//for 10Aout2018
 105   1        //return (-4.88*time*time+126.08*time-745.26+(1.1*9.5));//for 09Aout2018
 106   1      }
 107          //
 108          /*
 109            for(i=0;i<13;i++)
 110            {
 111              if (BCDtoDec1(hurs)<=Time_stamp_PM[i+1][0] && BCDtoDec1(hurs)>=Time_stamp_PM[i][0] && BCDtoDec1(mns)>= T
C51 COMPILER V9.52.0.0   BIPOLARMOTOR                                                      08/07/2018 15:51:12 PAGE 3   

             -ime_stamp_PM[i][1] && BCDtoDec1(mns)<= Time_stamp_PM[i+1][1] && BCDtoDec1(mns)%5==0)
 112              {
 113                desired_distance=(receiver_pos[i+1][0]-receiver_pos[i][0])/(Time_stamp_PM[i+1][0]*60+Time_stamp_PM[i+1]
             -[1]-Time_stamp_PM[i][0]*60-Time_stamp_PM[i][1])*(BCDtoDec1(hurs)*60+BCDtoDec1(mns)-Time_stamp_PM[i][0]*60-Time_stamp_PM[
             -i][1])+receiver_pos[i][0];
 114              }
 115            }
 116          */
 117          
 118          //int Day_Of_Year(unsigned char months,unsigned char days)*/
>>>>>>> 7a5f3df6684a2c9f1d307030c61e4f15880c2ed6

 110          */
 111          
 112          //int Day_Of_Year(unsigned char months,unsigned char days)*/

<<<<<<< HEAD

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    840    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    124      36
=======
MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1237    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    124      40
>>>>>>> 7a5f3df6684a2c9f1d307030c61e4f15880c2ed6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
